# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-09-27 10:31-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: contracorriente/man1/zsh.1:1 contracorriente/man1/zshall.1:1
#: contracorriente/man1/zshall.1:479 contracorriente/man1/zshbuiltins.1:1
#: contracorriente/man1/zshcalsys.1:1 contracorriente/man1/zshcompctl.1:1
#: contracorriente/man1/zshcompsys.1:1 contracorriente/man1/zshcompwid.1:1
#: contracorriente/man1/zshcontrib.1:1 contracorriente/man1/zshexpn.1:1
#: contracorriente/man1/zshmisc.1:1 contracorriente/man1/zshmodules.1:1
#: contracorriente/man1/zshoptions.1:1 contracorriente/man1/zshparam.1:1
#: contracorriente/man1/zshroadmap.1:1 contracorriente/man1/zshtcpsys.1:1
#: contracorriente/man1/zshzftpsys.1:1 contracorriente/man1/zshzle.1:1
#, no-wrap
msgid "February 14, 2020"
msgstr ""

#. type: TH
#: contracorriente/man1/zsh.1:1 contracorriente/man1/zshall.1:1
#: contracorriente/man1/zshall.1:479 contracorriente/man1/zshbuiltins.1:1
#: contracorriente/man1/zshcalsys.1:1 contracorriente/man1/zshcompctl.1:1
#: contracorriente/man1/zshcompsys.1:1 contracorriente/man1/zshcompwid.1:1
#: contracorriente/man1/zshcontrib.1:1 contracorriente/man1/zshexpn.1:1
#: contracorriente/man1/zshmisc.1:1 contracorriente/man1/zshmodules.1:1
#: contracorriente/man1/zshoptions.1:1 contracorriente/man1/zshparam.1:1
#: contracorriente/man1/zshroadmap.1:1 contracorriente/man1/zshtcpsys.1:1
#: contracorriente/man1/zshzftpsys.1:1 contracorriente/man1/zshzle.1:1
#, no-wrap
msgid "zsh 5\\&.8"
msgstr ""

#. type: SH
#: contracorriente/man1/zsh.1:2 contracorriente/man1/zshall.1:2
#: contracorriente/man1/zshbuiltins.1:2 contracorriente/man1/zshcalsys.1:2
#: contracorriente/man1/zshcompctl.1:2 contracorriente/man1/zshcompsys.1:2
#: contracorriente/man1/zshcompwid.1:2 contracorriente/man1/zshcontrib.1:2
#: contracorriente/man1/zshexpn.1:2 contracorriente/man1/zshmisc.1:2
#: contracorriente/man1/zshmodules.1:2 contracorriente/man1/zshoptions.1:2
#: contracorriente/man1/zshparam.1:2 contracorriente/man1/zshroadmap.1:2
#: contracorriente/man1/zshtcpsys.1:2 contracorriente/man1/zshzftpsys.1:2
#: contracorriente/man1/zshzle.1:2
#, no-wrap
msgid "NAME"
msgstr ""

#. type: SH
#: contracorriente/man1/zsh.1:45 contracorriente/man1/zshall.1:44
#: contracorriente/man1/zshcalsys.1:5 contracorriente/man1/zshcompctl.1:5
#: contracorriente/man1/zshcompsys.1:5 contracorriente/man1/zshcompwid.1:5
#: contracorriente/man1/zshcontrib.1:5 contracorriente/man1/zshexpn.1:5
#: contracorriente/man1/zshmodules.1:5 contracorriente/man1/zshparam.1:5
#: contracorriente/man1/zshtcpsys.1:5 contracorriente/man1/zshzftpsys.1:5
#: contracorriente/man1/zshzle.1:5
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: TP
#: contracorriente/man1/zshbuiltins.1:663 contracorriente/man1/zshexpn.1:2594
#: contracorriente/man1/zshmodules.1:3519
#, no-wrap
msgid "1\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshbuiltins.1:671 contracorriente/man1/zshexpn.1:2598
#: contracorriente/man1/zshmodules.1:3523
#, no-wrap
msgid "2\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshbuiltins.1:677 contracorriente/man1/zshexpn.1:2601
#: contracorriente/man1/zshmodules.1:3526
#, no-wrap
msgid "3\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshbuiltins.1:682 contracorriente/man1/zshexpn.1:2605
#: contracorriente/man1/zshmodules.1:3529
#, no-wrap
msgid "4\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshbuiltins.1:1569 contracorriente/man1/zshexpn.1:296
#: contracorriente/man1/zshexpn.1:2775 contracorriente/man1/zshparam.1:402
#, no-wrap
msgid "B<r>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshbuiltins.1:1706 contracorriente/man1/zshexpn.1:1273
#, no-wrap
msgid "B<readonly>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshcalsys.1:491 contracorriente/man1/zshcompsys.1:2443
#: contracorriente/man1/zshcompsys.1:2816 contracorriente/man1/zshcontrib.1:790
#: contracorriente/man1/zshexpn.1:911 contracorriente/man1/zshexpn.1:1364
#: contracorriente/man1/zshexpn.1:2425 contracorriente/man1/zshexpn.1:2495
#: contracorriente/man1/zshmisc.1:1384 contracorriente/man1/zshmisc.1:2306
#: contracorriente/man1/zshmodules.1:2091
#: contracorriente/man1/zshmodules.1:2230
#: contracorriente/man1/zshmodules.1:3219
#: contracorriente/man1/zshmodules.1:4279 contracorriente/man1/zshzle.1:1082
msgid "For example,"
msgstr ""

#. type: SS
#: contracorriente/man1/zshcompsys.1:539 contracorriente/man1/zshexpn.1:65
#, no-wrap
msgid "Overview"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcompsys.1:1990 contracorriente/man1/zshexpn.1:1252
#, no-wrap
msgid "B<local>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcompsys.1:2651 contracorriente/man1/zshcompwid.1:756
#: contracorriente/man1/zshcontrib.1:3036 contracorriente/man1/zshexpn.1:2981
#: contracorriente/man1/zshmisc.1:102
#, no-wrap
msgid "B<->"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:728 contracorriente/man1/zshexpn.1:273
#: contracorriente/man1/zshexpn.1:1350 contracorriente/man1/zshexpn.1:2760
#: contracorriente/man1/zshparam.1:393
#, no-wrap
msgid "B<p>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:731 contracorriente/man1/zshexpn.1:2802
#, no-wrap
msgid "B<s>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:1448
#: contracorriente/man1/zshcontrib.1:1517 contracorriente/man1/zshexpn.1:2769
#, no-wrap
msgid "B<%b>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:1459
#: contracorriente/man1/zshcontrib.1:1549
#: contracorriente/man1/zshcontrib.1:4048 contracorriente/man1/zshexpn.1:2772
#: contracorriente/man1/zshmisc.1:2493 contracorriente/man1/zshparam.1:1656
#: contracorriente/man1/zshtcpsys.1:585
#, no-wrap
msgid "B<%c>"
msgstr ""

#. type: SS
#: contracorriente/man1/zshcontrib.1:2030 contracorriente/man1/zshexpn.1:1823
#, no-wrap
msgid "Examples"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:3023 contracorriente/man1/zshexpn.1:125
#: contracorriente/man1/zshmisc.1:2663
#, no-wrap
msgid "B<!>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:3032 contracorriente/man1/zshexpn.1:2159
#: contracorriente/man1/zshmisc.1:2669
#, no-wrap
msgid "B<?>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:3042 contracorriente/man1/zshexpn.1:2751
#: contracorriente/man1/zshmisc.1:2683
#, no-wrap
msgid "B<\\&.>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:3049 contracorriente/man1/zshexpn.1:239
#: contracorriente/man1/zshexpn.1:1114 contracorriente/man1/zshmisc.1:2681
#, no-wrap
msgid "B<c>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:3055 contracorriente/man1/zshexpn.1:2741
#: contracorriente/man1/zshmisc.1:2677
#, no-wrap
msgid "B</>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:3068 contracorriente/man1/zshexpn.1:168
#: contracorriente/man1/zshexpn.1:1338
#, no-wrap
msgid "B<0>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:3106 contracorriente/man1/zshexpn.1:132
#, no-wrap
msgid "B<!!>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshcontrib.1:4538 contracorriente/man1/zshexpn.1:336
#: contracorriente/man1/zshexpn.1:2781
#, no-wrap
msgid "B<x>"
msgstr ""

#. type: TH
#: contracorriente/man1/zshexpn.1:1
#, no-wrap
msgid "ZSHEXPN"
msgstr ""

#.  Yodl file: Zsh/expn.yo
#. type: Plain text
#: contracorriente/man1/zshexpn.1:5
msgid "zshexpn - zsh expansion and substitution"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:8
msgid ""
"The following types of expansions are performed in the indicated order in "
"five steps:"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:10
#, no-wrap
msgid "I<History Expansion>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:14
msgid "This is performed only in interactive shells\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:14
#, no-wrap
msgid "I<Alias Expansion>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:19
msgid ""
"Aliases are expanded immediately before the command line is parsed as "
"explained under Aliasing in I<zshmisc>(1)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:19
#, no-wrap
msgid "I<Process Substitution>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:22
#, no-wrap
msgid "I<Parameter Expansion>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:25
#, no-wrap
msgid "I<Command Substitution>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:28
#, no-wrap
msgid "I<Arithmetic Expansion>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:31
#, no-wrap
msgid "I<Brace Expansion>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:40
msgid ""
"These five are performed in left-to-right fashion\\&.  On each argument, any "
"of the five steps that are needed are performed one after the other\\&.  "
"Hence, for example, all the parts of parameter expansion are completed "
"before command substitution is started\\&.  After these expansions, all "
"unquoted occurrences of the characters `B<\\e>\\&',`B<'>' and `B<\">' are "
"removed\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:40
#, no-wrap
msgid "I<Filename Expansion>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:46
msgid ""
"If the B<SH_FILE_EXPANSION> option is set, the order of expansion is "
"modified for compatibility with B<sh> and B<ksh>\\&.  In that case "
"I<filename expansion> is performed immediately after I<alias expansion>, "
"preceding the set of five expansions mentioned above\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:46
#, no-wrap
msgid "I<Filename Generation>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:49
msgid ""
"This expansion, commonly referred to as B<globbing>, is always done last\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:51
msgid "The following sections explain the types of expansion in detail\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:52
#, no-wrap
msgid "HISTORY EXPANSION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:56
msgid ""
"History expansion allows you to use words from previous command lines in the "
"command line you are typing\\&.  This simplifies spelling corrections and "
"the repetition of complicated commands or arguments\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:64
msgid ""
"Immediately before execution, each command is saved in the history list, the "
"size of which is controlled by the B<HISTSIZE> parameter\\&.  The one most "
"recent command is always retained in any case\\&.  Each saved command in the "
"history list is called a history I<event> and is assigned a number, "
"beginning with 1 (one) when the shell starts up\\&.  The history number that "
"you may see in your prompt (see EXPANSION OF PROMPT SEQUENCES in "
"I<zshmisc>(1)) is the number that is to be assigned to the I<next> command"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:70
msgid ""
"A history expansion begins with the first character of the B<histchars> "
"parameter, which is `B<!>\\&' by default, and may occur anywhere on the "
"command line, including inside double quotes (but not inside single quotes B<"
"\\&'\\&.\\&.\\&.'> or C-style quotes B<$'\\&.\\&.\\&.'> nor when escaped "
"with a backslash)\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:75
msgid ""
"The first character is followed by an optional event designator (see the "
"section `Event Designators\\&') and then an optional word designator (the "
"section `Word Designators\\&'); if neither of these designators is present, "
"no history expansion occurs\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:80
msgid ""
"Input lines containing history expansions are echoed after being expanded, "
"but before any other expansions take place and before the command is executed"
"\\&.  It is this expanded form that is recorded as the history event for "
"later references\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:82
msgid "History expansions do not nest\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:90
msgid ""
"By default, a history reference with no event designator refers to the same "
"event as any preceding history reference on that command line; if it is the "
"only history reference in a command, it refers to the previous command\\&.  "
"However, if the option B<CSH_JUNKIE_HISTORY> is set, then every history "
"reference with no event specification I<always> refers to the previous "
"command\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:100
msgid ""
"For example, `B<!>\\&' is the event designator for the previous command, so "
"`B<!!:1>\\&' always refers to the first word of the previous command, and "
"`B<!!$>\\&' always refers to the last word of the previous command\\&.  With "
"B<CSH_JUNKIE_HISTORY> set, then `B<!:1>\\&' and `B<!$>' function in the same "
"manner as `B<!!:1>\\&' and `B<!!$>', respectively\\&.  Conversely, if "
"B<CSH_JUNKIE_HISTORY> is unset, then `B<!:1>\\&' and `B<!$>' refer to the "
"first and last words, respectively, of the same event referenced by the "
"nearest other history reference preceding them on the current command line, "
"or to the previous command if there is no preceding reference\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:109
msgid ""
"The character sequence `B<^>I<foo>B<^>I<bar>\\&' (where `B<^>' is actually "
"the second character of the B<histchars> parameter)  repeats the last "
"command, replacing the string I<foo> with I<bar>\\&.  More precisely, the "
"sequence `B<^>I<foo>B<^>I<bar>B<^>\\&' is synonymous with `B<!!:"
"s>B<^>I<foo>B<^>I<bar>B<^>\\&', hence other modifiers (see the section "
"`Modifiers\\&') may follow the final `B<^>'\\&.  In particular, "
"`B<^>I<foo>B<^>I<bar>B<^:G>\\&' performs a global substitution\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:115
msgid ""
"If the shell encounters the character sequence `B<!\">\\&' in the input, the "
"history mechanism is temporarily disabled until the current list (see "
"I<zshmisc>(1)) is fully parsed\\&.  The `B<!\">\\&' is removed from the "
"input, and any subsequent `B<!>\\&' characters have no special significance"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:118
msgid ""
"A less convenient but more comprehensible form of command history support is "
"provided by the B<fc> builtin\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:118
#, no-wrap
msgid "Event Designators"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:123
msgid ""
"An event designator is a reference to a command-line entry in the history "
"list\\&.  In the list below, remember that the initial B<`!\\&'> in each "
"item may be changed to another character by setting the B<histchars> "
"parameter\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:132
msgid ""
"Start a history expansion, except when followed by a blank, newline, `B<=>"
"\\&' or `B<(>'\\&.  If followed immediately by a word designator (see the "
"section `Word Designators\\&'), this forms a history reference with no event "
"designator (see the section `Overview\\&')\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:137
msgid ""
"Refer to the previous command\\&.  By itself, this expansion repeats the "
"previous command\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:137
#, no-wrap
msgid "B<!>I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:140
msgid "Refer to command-line I<n>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:140
#, no-wrap
msgid "B<!->I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:143
msgid "Refer to the current command-line minus I<n>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:143
#, no-wrap
msgid "B<!>I<str>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:146
msgid "Refer to the most recent command starting with I<str>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:146
#, no-wrap
msgid "B<!?>I<str>[B<?>]"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:151
msgid ""
"Refer to the most recent command containing I<str>\\&.  The trailing `B<?>"
"\\&' is necessary if this reference is to be followed by a modifier or "
"followed by any text that is not to be considered part of I<str>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:151
#, no-wrap
msgid "B<!#>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:156
msgid ""
"Refer to the current command line typed in so far\\&.  The line is treated "
"as if it were complete up to and including the word before the one with the "
"`B<!#>\\&' reference\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:156
#, no-wrap
msgid "B<!{>\\&.\\&.\\&.B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:159
msgid ""
"Insulate a history reference from adjacent characters (if necessary)\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:159
#, no-wrap
msgid "Word Designators"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:166
msgid ""
"A word designator indicates which word or words of a given command line are "
"to be included in a history reference\\&.  A `B<:>\\&' usually separates the "
"event specification from the word designator\\&.  It may be omitted only if "
"the word designator begins with a `B<^>\\&', `B<$>', `B<*>', `B<->' or `B<"
"%>'\\&.  Word designators include:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:171
msgid "The first input word (command)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:171
#, no-wrap
msgid "I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:174
msgid "The I<n>th argument\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:174 contracorriente/man1/zshexpn.1:2978
#: contracorriente/man1/zshmisc.1:1894 contracorriente/man1/zshmisc.1:1966
#, no-wrap
msgid "B<^>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:177
msgid "The first argument\\&.  That is, B<1>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:177
#, no-wrap
msgid "B<$>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:180
msgid "The last argument\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:180 contracorriente/man1/zshexpn.1:1041
#: contracorriente/man1/zshexpn.1:2766
#, no-wrap
msgid "B<%>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:183
msgid "The word matched by (the most recent) B<?>I<str> search\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:183
#, no-wrap
msgid "I<x>B<->I<y>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:186
msgid "A range of words; I<x> defaults to B<0>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:186 contracorriente/man1/zshexpn.1:2155
#: contracorriente/man1/zshexpn.1:2763
#, no-wrap
msgid "B<*>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:189
msgid "All the arguments, or a null value if there are none\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:189
#, no-wrap
msgid "I<x>B<*>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:192
msgid "Abbreviates `I<x>B<-$>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:192
#, no-wrap
msgid "I<x>B<->"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:195
msgid "Like `I<x>B<*>\\&' but omitting word B<$>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:201
msgid ""
"Note that a `B<%>\\&' word designator works only when used in one of `B<!%>"
"\\&', `B<!:%>' or `B<!?>I<str>B<?:%>', and only when used after a B<!?> "
"expansion (possibly in an earlier command)\\&.  Anything else results in an "
"error, although the error may not be the most obvious one\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:201
#, no-wrap
msgid "Modifiers"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:207
msgid ""
"After the optional word designator, you can add a sequence of one or more of "
"the following modifiers, each preceded by a `B<:>\\&'\\&.  These modifiers "
"also work on the result of I<filename generation> and I<parameter "
"expansion>, except where noted\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:209 contracorriente/man1/zshexpn.1:1079
#, no-wrap
msgid "B<a>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:215
msgid ""
"Turn a file name into an absolute path: prepends the current directory, if "
"necessary; remove `B<\\&.>\\&' path segments; and remove `B<\\&.\\&.>' path "
"segments and the segments that immediately precede them\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:224
msgid ""
"This transformation is agnostic about what is in the filesystem, i\\&.e\\&. "
"is on the logical, not the physical directory\\&.  It takes place in the "
"same manner as when changing directories when neither of the options "
"B<CHASE_DOTS> or B<CHASE_LINKS> is set\\&.  For example, `B</before/here/\\&."
"\\&./after>\\&' is always transformed to `B</before/after>\\&', regardless "
"of whether `B</before/here>' exists or what kind of object (dir, file, "
"symlink, etc\\&.) it is\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:225 contracorriente/man1/zshexpn.1:1056
#: contracorriente/man1/zshexpn.1:2784
#, no-wrap
msgid "B<A>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:230
msgid ""
"Turn a file name into an absolute path as the `B<a>\\&' modifier does, and "
"I<then> pass the result through the B<realpath(3)> library function to "
"resolve symbolic links\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:235
msgid ""
"Note: on systems that do not have a B<realpath(3)> library function, "
"symbolic links are not resolved, so on those systems `B<a>\\&' and `B<A>\\&' "
"are equivalent\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:238
msgid ""
"Note: B<foo:A> and B<realpath(foo)> are different on some inputs\\&.  For "
"B<realpath(foo)> semantics, see the `B<P>` modifier\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:246
msgid ""
"Resolve a command name into an absolute path by searching the command path "
"given by the B<PATH> variable\\&.  This does not work for commands "
"containing directory parts\\&.  Note also that this does not usually work as "
"a glob qualifier unless a file of the same name is found in the current "
"directory\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:246 contracorriente/man1/zshexpn.1:1133
#: contracorriente/man1/zshmisc.1:2696 contracorriente/man1/zshparam.1:493
#, no-wrap
msgid "B<e>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:252
msgid ""
"Remove all but the part of the filename extension following the `B<\\&.>"
"\\&'; see the definition of the filename extension in the description of the "
"B<r> modifier below\\&.  Note that according to that definition the result "
"will be empty if the string ends with a `B<\\&.>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:252
#, no-wrap
msgid "B<h> [ I<digits> ]"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:270
msgid ""
"Remove a trailing pathname component, shortening the path by one directory "
"level: this is the `head\\&' of the pathname\\&.  This works like `B<dirname>"
"\\&'\\&.  If the B<h> is followed immediately (with no spaces or other "
"separator) by any number of decimal digits, and the value of the resulting "
"number is non-zero, that number of leading components is preserved instead "
"of the final component being removed\\&.  In an absolute path the leading "
"`B</>\\&' is the first component, so, for example, if B<var=/my/path/to/"
"something>, then B<${var:h3}> substitutes B</my/path>\\&.  Consecutive `/"
"\\&'s are treated the same as a single `/\\&'\\&.  In parameter "
"substitution, digits may only be used if the expression is in braces, so for "
"example the short form substitution B<$var:h2> is treated as B<${var:h}2>, "
"not as B<${var:h2}>\\&.  No restriction applies to the use of digits in "
"history substitution or globbing qualifiers\\&.  If more components are "
"requested than are present, the entire path is substituted (so this does not "
"trigger a `failed modifier\\&' error in history expansion)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:270 contracorriente/man1/zshexpn.1:2399
#: contracorriente/man1/zshmisc.1:2708
#, no-wrap
msgid "B<l>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:273
msgid "Convert the words to all lowercase\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:277
msgid ""
"Print the new command but do not execute it\\&.  Only works with history "
"expansion\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:277 contracorriente/man1/zshexpn.1:1190
#: contracorriente/man1/zshmodules.1:3484
#, no-wrap
msgid "B<P>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:282
msgid ""
"Turn a file name into an absolute path, like B<realpath(3)>\\&.  The "
"resulting path will be absolute, have neither `B<\\&.>\\&' nor `B<\\&.\\&.>' "
"components, and refer to the same directory entry as the input filename\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:286
msgid ""
"Unlike B<realpath(3)>, non-existent trailing components are permitted and "
"preserved\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:287 contracorriente/man1/zshexpn.1:1213
#: contracorriente/man1/zshexpn.1:2546
#, no-wrap
msgid "B<q>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:293
msgid ""
"Quote the substituted words, escaping further substitutions\\&.  Works with "
"history expansion and parameter expansion, though for parameters it is only "
"useful if the resulting text is to be re-evaluated such as by B<eval>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:293 contracorriente/man1/zshexpn.1:1238
#, no-wrap
msgid "B<Q>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:296
msgid "Remove one level of quotes from the substituted words\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:304
msgid ""
"Remove a filename extension leaving the root name\\&.  Strings with no "
"filename extension are not altered\\&.  A filename extension is a `B<\\&.>"
"\\&' followed by any number of characters (including zero) that are neither "
"`B<\\&.>\\&' nor `B</>' and that continue to the end of the string\\&.  For "
"example, the extension of `B<foo\\&.orig\\&.c>\\&' is `B<\\&.c>', and `B<dir"
"\\&.c/foo>' has no extension\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:304
#, no-wrap
msgid "B<s/>I<l>B</>I<r>[B</>]"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:311
msgid ""
"Substitute I<r> for I<l> as described below\\&.  The substitution is done "
"only for the first string that matches I<l>\\&.  For arrays and for filename "
"generation, this applies to each word of the expanded text\\&.  See below "
"for further notes on substitutions\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:317
msgid ""
"The forms `B<gs/>I<l>B</>I<r>\\&' and `B<s/>I<l>B</>I<r>B</:G>' perform "
"global substitution, i\\&.e\\&. substitute every occurrence of I<r> for I<l>"
"\\&.  Note that the B<g> or B<:G> must appear in exactly the position shown"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:319
msgid "See further notes on this form of substitution below\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:320 contracorriente/man1/zshmisc.1:1891
#: contracorriente/man1/zshmisc.1:1963
#, no-wrap
msgid "B<&>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:326
msgid ""
"Repeat the previous B<s> substitution\\&.  Like B<s>, may be preceded "
"immediately by a B<g>\\&.  In parameter expansion the B<&> must appear "
"inside braces, and in filename generation it must be quoted with a backslash"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:326
#, no-wrap
msgid "B<t> [ I<digits> ]"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:333
msgid ""
"Remove all leading pathname components, leaving the final component "
"(tail)\\&.  This works like `B<basename>\\&'\\&.  Any trailing slashes are "
"first removed\\&.  Decimal digits are handled as described above for (h), "
"but in this case that number of trailing components is preserved instead of "
"the default 1; 0 is treated the same as 1\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:333 contracorriente/man1/zshexpn.1:1295
#: contracorriente/man1/zshexpn.1:2558
#, no-wrap
msgid "B<u>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:336
msgid "Convert the words to all uppercase\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:340
msgid ""
"Like B<q>, but break into words at whitespace\\&.  Does not work with "
"parameter expansion\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:353
msgid ""
"The B<s/>I<l>B</>I<r>B</> substitution works as follows\\&.  By default the "
"left-hand side of substitutions are not patterns, but character strings\\&.  "
"Any character can be used as the delimiter in place of `B</>\\&'\\&.  A "
"backslash quotes the delimiter character\\&.  The character `B<&>\\&', in "
"the right-hand-side I<r>, is replaced by the text from the left-hand-side "
"I<l>\\&.  The `B<&>\\&' can be quoted with a backslash\\&.  A null I<l> uses "
"the previous string either from the previous I<l> or from the contextual "
"scan string I<s> from `B<!?>I<s>\\&'\\&.  You can omit the rightmost "
"delimiter if a newline immediately follows I<r>; the rightmost `B<?>\\&' in "
"a context scan can similarly be omitted\\&.  Note the same record of the "
"last I<l> and I<r> is maintained across all forms of expansion\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:356
msgid ""
"Note that if a `B<&>\\&' is used within glob qualifiers an extra backslash "
"is needed as a B<&> is a special character in this case\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:369
msgid ""
"Also note that the order of expansions affects the interpretation of I<l> "
"and I<r>\\&.  When used in a history expansion, which occurs before any "
"other expansions, I<l> and I<r> are treated as literal strings (except as "
"explained for B<HIST_SUBST_PATTERN> below)\\&.  When used in parameter "
"expansion, the replacement of I<r> into the parameter\\&'s value is done "
"first, and then any additional process, parameter, command, arithmetic, or "
"brace references are applied, which may evaluate those substitutions and "
"expansions more than once if I<l> appears more than once in the starting "
"value\\&.  When used in a glob qualifier, any substitutions or expansions "
"are performed once at the time the qualifier is parsed, even before the `B<:"
"s>\\&' expression itself is divided into I<l> and I<r> sides\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:383
msgid ""
"If the option B<HIST_SUBST_PATTERN> is set, I<l> is treated as a pattern of "
"the usual form described in the section FILENAME GENERATION below\\&.  This "
"can be used in all the places where modifiers are available; note, however, "
"that in globbing qualifiers parameter substitution has already taken place, "
"so parameters in the replacement string should be quoted to ensure they are "
"replaced at the correct time\\&.  Note also that complicated patterns used "
"in globbing qualifiers may need the extended glob qualifier notation B<(#q:s/"
">I<\\&.\\&.\\&.>B</>I<\\&.\\&.\\&.>B</)> in order for the shell to recognize "
"the expression as a glob qualifier\\&.  Further, note that bad patterns in "
"the substitution are not subject to the B<NO_BAD_PATTERN> option so will "
"cause an error\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:390
msgid ""
"When B<HIST_SUBST_PATTERN> is set, I<l> may start with a B<#> to indicate "
"that the pattern must match at the start of the string to be substituted, "
"and a B<%> may appear at the start or after an B<#> to indicate that the "
"pattern must match at the end of the string to be substituted\\&.  The B<%> "
"or B<#> may be quoted with two backslashes\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:393
msgid ""
"For example, the following piece of filename generation code with the "
"B<EXTENDED_GLOB> option:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:397
#, no-wrap
msgid "B<print -r -- *\\&.c(#q:s/#%(#b)s(*)\\&.c/\\&'S${match[1]}\\&.C'/)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:407
msgid ""
"takes the expansion of B<*\\&.c> and applies the glob qualifiers in the "
"B<(#q>I<\\&.\\&.\\&.>B<)> expression, which consists of a substitution "
"modifier anchored to the start and end of each word (B<#%>)\\&.  This turns "
"on backreferences (B<(#b)>), so that the parenthesised subexpression is "
"available in the replacement string as B<${match[1]}>\\&.  The replacement "
"string is quoted so that the parameter is not substituted before the start "
"of filename generation\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:411
msgid ""
"The following B<f>, B<F>, B<w> and B<W> modifiers work only with parameter "
"expansion and filename generation\\&.  They are listed here to provide a "
"single point of reference for all modifiers\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:413 contracorriente/man1/zshexpn.1:1139
#: contracorriente/man1/zshparam.1:397
#, no-wrap
msgid "B<f>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:418
msgid ""
"Repeats the immediately (without a colon) following modifier until the "
"resulting word doesn\\&'t change any more\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:418
#, no-wrap
msgid "B<F:>I<expr>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:426
msgid ""
"Like B<f>, but repeats only I<n> times if the expression I<expr> evaluates "
"to I<n>\\&.  Any character can be used instead of the `B<:>\\&'; if `B<(>', "
"`B<[>', or `B<{>' is used as the opening delimiter, the closing delimiter "
"should be \\&'B<)>', `B<]>', or `B<}>', respectively\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:426 contracorriente/man1/zshexpn.1:1310
#: contracorriente/man1/zshexpn.1:2778 contracorriente/man1/zshmisc.1:2730
#: contracorriente/man1/zshparam.1:380
#, no-wrap
msgid "B<w>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:430
msgid ""
"Makes the immediately following modifier work on each word in the string\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:430
#, no-wrap
msgid "B<W:>I<sep>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:435
msgid ""
"Like B<w> but words are considered to be the parts of the string that are "
"separated by I<sep>\\&. Any character can be used instead of the `B<:>\\&'; "
"opening parentheses are handled specially, see above\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:435
#, no-wrap
msgid "PROCESS SUBSTITUTION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:447
msgid ""
"Each part of a command argument that takes the form `B<E<lt>(>I<list>B<)>"
"\\&', `B<E<gt>(>I<list>B<)>\\&' or `B<=(>I<list>B<)>\\&' is subject to "
"process substitution\\&.  The expression may be preceded or followed by "
"other strings except that, to prevent clashes with commonly occurring "
"strings and patterns, the last form must occur at the start of a command "
"argument, and the forms are only expanded when first parsing command or "
"assignment arguments\\&.  Process substitutions may be used following "
"redirection operators; in this case, the substitution must appear with no "
"trailing string\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:453
msgid ""
"Note that `B<E<lt>E<lt>(>I<list>B<)>\\&' is not a special syntax; it is "
"equivalent to `B<E<lt> E<lt>(>I<list>B<)>\\&', redirecting standard input "
"from the result of process substitution\\&.  Hence all the following "
"documentation applies\\&.  The second form (with the space)  is recommended "
"for clarity\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:463
msgid ""
"In the case of the B<E<lt>> or B<E<gt>> forms, the shell runs the commands "
"in I<list> as a subprocess of the job executing the shell command line\\&.  "
"If the system supports the B</dev/fd> mechanism, the command argument is the "
"name of the device file corresponding to a file descriptor; otherwise, if "
"the system supports named pipes (FIFOs), the command argument will be a "
"named pipe\\&.  If the form with B<E<gt>> is selected then writing on this "
"special file will provide input for I<list>\\&.  If B<E<lt>> is used, then "
"the file passed as an argument will be connected to the output of the "
"I<list> process\\&.  For example,"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:468
#, no-wrap
msgid ""
"B<paste E<lt>(cut -f1 >I<file1>B<) E<lt>(cut -f3 >I<file2>B<) |\n"
"tee E<gt>(>I<process1>B<) E<gt>(>I<process2>B<) E<gt>/dev/null>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:474
msgid ""
"cuts fields 1 and 3 from the files I<file1> and I<file2> respectively, "
"pastes the results together, and sends it to the processes I<process1> and "
"I<process2>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:482
msgid ""
"If B<=(>I<\\&.\\&.\\&.>B<)> is used instead of B<E<lt>(>I<\\&.\\&.\\&.>B<)>, "
"then the file passed as an argument will be the name of a temporary file "
"containing the output of the I<list> process\\&.  This may be used instead "
"of the B<E<lt>> form for a program that expects to lseek (see I<lseek>(2))  "
"on the input file\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:491
msgid ""
"There is an optimisation for substitutions of the form "
"B<=(E<lt>E<lt>E<lt>>I<arg>B<)>, where I<arg> is a single-word argument to "
"the here-string redirection B<E<lt>E<lt>E<lt>>\\&.  This form produces a "
"file name containing the value of I<arg> after any substitutions have been "
"performed\\&.  This is handled entirely within the current shell\\&.  This "
"is effectively the reverse of the special form B<$(E<lt>>I<arg>B<)> which "
"treats I<arg> as a file name and replaces it with the file\\&'s contents\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:504
msgid ""
"The B<=> form is useful as both the B</dev/fd> and the named pipe "
"implementation of B<E<lt>(>I<\\&.\\&.\\&.>B<)> have drawbacks\\&.  In the "
"former case, some programmes may automatically close the file descriptor in "
"question before examining the file on the command line, particularly if this "
"is necessary for security reasons such as when the programme is running "
"setuid\\&.  In the second case, if the programme does not actually open the "
"file, the subshell attempting to read from or write to the pipe will (in a "
"typical implementation, different operating systems may have different "
"behaviour) block for ever and have to be killed explicitly\\&.  In both "
"cases, the shell actually supplies the information using a pipe, so that "
"programmes that expect to lseek (see I<lseek>(2)) on the file will not work"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:507
msgid ""
"Also note that the previous example can be more compactly and efficiently "
"written (provided the B<MULTIOS> option is set) as:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:512
#, no-wrap
msgid ""
"B<paste E<lt>(cut -f1 >I<file1>B<) E<lt>(cut -f3 >I<file2>B<) \\e \n"
"E<gt> E<gt>(>I<process1>B<) E<gt> E<gt>(>I<process2>B<)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:517
msgid ""
"The shell uses pipes instead of FIFOs to implement the latter two process "
"substitutions in the above example\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:525
msgid ""
"There is an additional problem with B<E<gt>(>I<process>B<)>; when this is "
"attached to an external command, the parent shell does not wait for "
"I<process> to finish and hence an immediately following command cannot rely "
"on the results being complete\\&.  The problem and solution are the same as "
"described in the section I<MULTIOS> in I<zshmisc>(1)\\&.  Hence in a "
"simplified version of the example above:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:529
#, no-wrap
msgid "B<paste E<lt>(cut -f1 >I<file1>B<) E<lt>(cut -f3 >I<file2>B<) E<gt> E<gt>(>I<process>B<)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:534
msgid ""
"(note that no B<MULTIOS> are involved), I<process> will be run "
"asynchronously as far as the parent shell is concerned\\&.  The workaround "
"is:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:538
#, no-wrap
msgid "B<{ paste E<lt>(cut -f1 >I<file1>B<) E<lt>(cut -f3 >I<file2>B<) } E<gt> E<gt>(>I<process>B<)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:543
msgid ""
"The extra processes here are spawned from the parent shell which will wait "
"for their completion\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:550
msgid ""
"Another problem arises any time a job with a substitution that requires a "
"temporary file is disowned by the shell, including the case where `B<&!>\\&' "
"or `B<&|>' appears at the end of a command containing a substitution\\&.  In "
"that case the temporary file will not be cleaned up as the shell no longer "
"has any memory of the job\\&.  A workaround is to use a subshell, for "
"example,"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:554
#, no-wrap
msgid "B<(mycmd =(myoutput)) &!>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:559
msgid ""
"as the forked subshell will wait for the command to finish then remove the "
"temporary file\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:564
msgid ""
"A general workaround to ensure a process substitution endures for an "
"appropriate length of time is to pass it as a parameter to an anonymous "
"shell function (a piece of shell code that is run immediately with function "
"scope)\\&.  For example, this code:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:571
#, no-wrap
msgid ""
"B<() {\n"
"   print File $1:\n"
"   cat $1\n"
"} =(print This be the verse)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:575
msgid "outputs something resembling the following"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:580
#, no-wrap
msgid ""
"B<File /tmp/zsh6nU0kS:\n"
"This be the verse>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:585
msgid ""
"The temporary file created by the process substitution will be deleted when "
"the function exits\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:586
#, no-wrap
msgid "PARAMETER EXPANSION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:592
msgid ""
"The character `B<$>\\&' is used to introduce parameter expansions\\&.  See "
"I<zshparam>(1)  for a description of parameters, including arrays, "
"associative arrays, and subscript notation to access individual array "
"elements\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:598
msgid ""
"Note in particular the fact that words of unquoted parameters are not "
"automatically split on whitespace unless the option B<SH_WORD_SPLIT> is set; "
"see references to this option below for more details\\&.  This is an "
"important difference from other shells\\&.  However, as in other shells, "
"null words are elided from unquoted parameters\\&' expansions\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:600
msgid "With default options, after the assignments:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:605
#, no-wrap
msgid ""
"B<array=(\"first word\" \"\" \"third word\")\n"
"scalar=\"only word\">\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:614
msgid ""
"then B<$array> substitutes two words, `B<first word>\\&' and `B<third word>"
"\\&', and B<$scalar> substitutes a single word `B<only word>'\\&.  Note that "
"second element of B<array> was elided\\&.  Scalar parameters can be elided "
"too if their value is null (empty)\\&.  To avoid elision, use quoting as "
"follows: B<\"$scalar\"> for scalars and B<\"${array[@]}\"> or B<"
"\"${(@)array}\"> for arrays\\&.  (The last two forms are equivalent\\&.)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:619
msgid ""
"Parameter expansions can involve I<flags>, as in `B<${(@kv)aliases}>\\&', "
"and other operators, such as `B<${PREFIX:-\"/usr/local\"}>\\&'\\&.  "
"Parameter expansions can also be nested\\&.  These topics will be introduced "
"below\\&.  The full rules are complicated and are noted at the end\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:629
msgid ""
"In the expansions discussed below that require a pattern, the form of the "
"pattern is the same as that used for filename generation; see the section "
"`Filename Generation\\&'\\&.  Note that these patterns, along with the "
"replacement text of any substitutions, are themselves subject to parameter "
"expansion, command substitution, and arithmetic expansion\\&.  In addition "
"to the following operations, the colon modifiers described in the section "
"`Modifiers\\&' in the section `History Expansion' can be applied: for "
"example, B<${i:s/foo/bar/}> performs string substitution on the expansion of "
"parameter B<$i>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:632
msgid ""
"In the following descriptions, `I<word>\\&' refers to a single word "
"substituted on the command line, not necessarily a space delimited word\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:634
#, no-wrap
msgid "B<${>I<name>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:646
msgid ""
"The value, if any, of the parameter I<name> is substituted\\&.  The braces "
"are required if the expansion is to be followed by a letter, digit, or "
"underscore that is not to be interpreted as part of I<name>\\&.  In "
"addition, more complicated forms of substitution usually require the braces "
"to be present; exceptions, which only apply if the option B<KSH_ARRAYS> is "
"not set, are a single subscript or any colon modifiers appearing after the "
"name, or any of the characters `B<^>\\&', `B<=>\\&', `B<~>', `B<#>' or `B<"
"+>' appearing before the name, all of which work with or without braces\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:655
msgid ""
"If I<name> is an array parameter, and the B<KSH_ARRAYS> option is not set, "
"then the value of each element of I<name> is substituted, one element per "
"word\\&.  Otherwise, the expansion results in one word only; with "
"B<KSH_ARRAYS>, this is the first element of an array\\&.  No field splitting "
"is done on the result unless the B<SH_WORD_SPLIT> option is set\\&.  See "
"also the flags B<=> and B<s:>I<string>B<:>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:656
#, no-wrap
msgid "B<${+>I<name>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:660
msgid ""
"If I<name> is the name of a set parameter `B<1>\\&' is substituted, "
"otherwise `B<0>\\&' is substituted\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:660
#, no-wrap
msgid "B<${>I<name>B<->I<word>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:663
#, no-wrap
msgid "B<${>I<name>B<:->I<word>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:669
msgid ""
"If I<name> is set, or in the second form is non-null, then substitute its "
"value; otherwise substitute I<word>\\&.  In the second form I<name> may be "
"omitted, in which case I<word> is always substituted\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:669
#, no-wrap
msgid "B<${>I<name>B<+>I<word>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:672
#, no-wrap
msgid "B<${>I<name>B<:+>I<word>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:677
msgid ""
"If I<name> is set, or in the second form is non-null, then substitute "
"I<word>; otherwise substitute nothing\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:677
#, no-wrap
msgid "B<${>I<name>B<=>I<word>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:680
#, no-wrap
msgid "B<${>I<name>B<:=>I<word>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:683
#, no-wrap
msgid "B<${>I<name>B<::=>I<word>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:690
msgid ""
"In the first form, if I<name> is unset then set it to I<word>; in the second "
"form, if I<name> is unset or null then set it to I<word>; and in the third "
"form, unconditionally set I<name> to I<word>\\&.  In all forms, the value of "
"the parameter is then substituted\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:690
#, no-wrap
msgid "B<${>I<name>B<?>I<word>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:693
#, no-wrap
msgid "B<${>I<name>B<:?>I<word>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:700
msgid ""
"In the first form, if I<name> is set, or in the second form if I<name> is "
"both set and non-null, then substitute its value; otherwise, print I<word> "
"and exit from the shell\\&.  Interactive shells instead return to the prompt"
"\\&.  If I<word> is omitted, then a standard message is printed\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:706
msgid ""
"In any of the above expressions that test a variable and substitute an "
"alternate I<word>, note that you can use standard shell quoting in the "
"I<word> value to selectively override the splitting done by the "
"B<SH_WORD_SPLIT> option and the B<=> flag, but not splitting by the B<s:"
">I<string>B<:> flag\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:711
msgid ""
"In the following expressions, when I<name> is an array and the substitution "
"is not quoted, or if the `B<(@)>\\&' flag or the I<name>B<[@]> syntax is "
"used, matching and replacement is performed on each array element separately"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:713
#, no-wrap
msgid "B<${>I<name>B<#>I<pattern>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:716
#, no-wrap
msgid "B<${>I<name>B<##>I<pattern>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:726
msgid ""
"If the I<pattern> matches the beginning of the value of I<name>, then "
"substitute the value of I<name> with the matched portion deleted; otherwise, "
"just substitute the value of I<name>\\&.  In the first form, the smallest "
"matching pattern is preferred; in the second form, the largest matching "
"pattern is preferred\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:726
#, no-wrap
msgid "B<${>I<name>B<%>I<pattern>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:729
#, no-wrap
msgid "B<${>I<name>B<%%>I<pattern>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:739
msgid ""
"If the I<pattern> matches the end of the value of I<name>, then substitute "
"the value of I<name> with the matched portion deleted; otherwise, just "
"substitute the value of I<name>\\&.  In the first form, the smallest "
"matching pattern is preferred; in the second form, the largest matching "
"pattern is preferred\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:739
#, no-wrap
msgid "B<${>I<name>B<:#>I<pattern>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:746
msgid ""
"If the I<pattern> matches the value of I<name>, then substitute the empty "
"string; otherwise, just substitute the value of I<name>\\&.  If I<name> is "
"an array the matching array elements are removed (use the `B<(M)>\\&' flag "
"to remove the non-matched elements)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:746
#, no-wrap
msgid "B<${>I<name>B<:|>I<arrayname>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:754
msgid ""
"If I<arrayname> is the name (N\\&.B\\&., not contents) of an array variable, "
"then any elements contained in I<arrayname> are removed from the "
"substitution of I<name>\\&.  If the substitution is scalar, either because "
"I<name> is a scalar variable or the expression is quoted, the elements of "
"I<arrayname> are instead tested against the entire expression\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:754
#, no-wrap
msgid "B<${>I<name>B<:*>I<arrayname>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:759
msgid ""
"Similar to the preceding substitution, but in the opposite sense, so that "
"entries present in both the original substitution and as elements of "
"I<arrayname> are retained and others removed\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:759
#, no-wrap
msgid "B<${>I<name>B<:^>I<arrayname>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:762
#, no-wrap
msgid "B<${>I<name>B<:^^>I<arrayname>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:770
msgid ""
"Zips two arrays, such that the output array is twice as long as the shortest "
"(longest for `B<:^^>\\&') of B<name> and B<arrayname>, with the elements "
"alternatingly being picked from them\\&. For `B<:^>\\&', if one of the input "
"arrays is longer, the output will stop when the end of the shorter array is "
"reached\\&.  Thus,"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:775
#, no-wrap
msgid "B<a=(1 2 3 4); b=(a b); print ${a:^b}>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:781
msgid ""
"will output `B<1 a 2 b>\\&'\\&.  For `B<:^^>', then the input is repeated "
"until all of the longer array has been used up and the above will output "
"`B<1 a 2 b 3 a 4 b>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:785
msgid ""
"Either or both inputs may be a scalar, they will be treated as an array of "
"length 1 with the scalar as the only element\\&. If either array is empty, "
"the other array is output with no extra elements inserted\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:789
msgid ""
"Currently the following code will output `B<a b>\\&' and `B<1>' as two "
"separate elements, which can be unexpected\\&. The second print provides a "
"workaround which should continue to work if this is changed\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:793
#, no-wrap
msgid "B<a=(a b); b=(1 2); print -l \"${a:^b}\"; print -l \"${${a:^b}}\">\n"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:796
#, no-wrap
msgid "B<${>I<name>B<:>I<offset>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:799
#, no-wrap
msgid "B<${>I<name>B<:>I<offset>B<:>I<length>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:806
msgid ""
"This syntax gives effects similar to parameter subscripting in the form B<"
"$>I<name>B<[>I<start>B<,>I<end>B<]>, but is compatible with other shells; "
"note that both I<offset> and I<length> are interpreted differently from the "
"components of a subscript\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:814
msgid ""
"If I<offset> is non-negative, then if the variable I<name> is a scalar "
"substitute the contents starting I<offset> characters from the first "
"character of the string, and if I<name> is an array substitute elements "
"starting I<offset> elements from the first element\\&.  If I<length> is "
"given, substitute that many characters or elements, otherwise the entire "
"rest of the scalar or array\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:820
msgid ""
"A positive I<offset> is always treated as the offset of a character or "
"element in I<name> from the first character or element of the array (this is "
"different from native zsh subscript notation)\\&.  Hence 0 refers to the "
"first character or element regardless of the setting of the option "
"B<KSH_ARRAYS>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:823
msgid ""
"A negative offset counts backwards from the end of the scalar or array, so "
"that -1 corresponds to the last character or element, and so on\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:828
msgid ""
"When positive, I<length> counts from the I<offset> position toward the end "
"of the scalar or array\\&.  When negative, I<length> counts back from the end"
"\\&.  If this results in a position smaller than I<offset>, a diagnostic is "
"printed and nothing is substituted\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:831
msgid ""
"The option B<MULTIBYTE> is obeyed, i\\&.e\\&. the offset and length count "
"multibyte characters where appropriate\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:835
msgid ""
"I<offset> and I<length> undergo the same set of shell substitutions as for "
"scalar assignment; in addition, they are then subject to arithmetic "
"evaluation\\&.  Hence, for example"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:842
#, no-wrap
msgid ""
"B<print ${foo:3}\n"
"print ${foo: 1 + 2}\n"
"print ${foo:$(( 1 + 2))}\n"
"print ${foo:$(echo 1 + 2)}>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:852
msgid ""
"all have the same effect, extracting the string starting at the fourth "
"character of B<$foo> if the substitution would otherwise return a scalar, or "
"the array starting at the fourth element if B<$foo> would return an array"
"\\&.  Note that with the option B<KSH_ARRAYS> B<$foo> always returns a "
"scalar (regardless of the use of the offset syntax) and a form such as B<"
"${foo[*]:3}> is required to extract elements of an array named B<foo>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:864
msgid ""
"If I<offset> is negative, the B<-> may not appear immediately after the B<:> "
"as this indicates the B<${>I<name>B<:->I<word>B<}> form of substitution\\&.  "
"Instead, a space may be inserted before the B<->\\&.  Furthermore, neither "
"I<offset> nor I<length> may begin with an alphabetic character or B<&> as "
"these are used to indicate history-style modifiers\\&.  To substitute a "
"value from a variable, the recommended approach is to precede it with a B<$> "
"as this signifies the intention (parameter substitution can easily be "
"rendered unreadable); however, as arithmetic substitution is performed, the "
"expression B<${var: offs}> does work, retrieving the offset from B<$offs>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:873
msgid ""
"For further compatibility with other shells there is a special case for "
"array offset 0\\&.  This usually accesses the first element of the array"
"\\&.  However, if the substitution refers to the positional parameter array, "
"e\\&.g\\&. B<$@> or B<$*>, then offset 0 instead refers to B<$0>, offset 1 "
"refers to B<$1>, and so on\\&.  In other words, the positional parameter "
"array is effectively extended by prepending B<$0>\\&.  Hence B<${*:0:1}> "
"substitutes B<$0> and B<${*:1:1}> substitutes B<$1>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:874
#, no-wrap
msgid "B<${>I<name>B</>I<pattern>B</>I<repl>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:877
#, no-wrap
msgid "B<${>I<name>B<//>I<pattern>B</>I<repl>B<}>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:880
#, no-wrap
msgid "B<${>I<name>B<:/>I<pattern>B</>I<repl>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:892
msgid ""
"Replace the longest possible match of I<pattern> in the expansion of "
"parameter I<name> by string I<repl>\\&.  The first form replaces just the "
"first occurrence, the second form all occurrences, and the third form "
"replaces only if I<pattern> matches the entire string\\&.  Both I<pattern> "
"and I<repl> are subject to double-quoted substitution, so that expressions "
"like B<${name/$opat/$npat}> will work, but obey the usual rule that pattern "
"characters in B<$opat> are not treated specially unless either the option "
"B<GLOB_SUBST> is set, or B<$opat> is instead substituted as B<${~opat}>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:904
msgid ""
"The I<pattern> may begin with a `B<#>\\&', in which case the I<pattern> must "
"match at the start of the string, or `B<%>\\&', in which case it must match "
"at the end of the string, or `B<#%>\\&' in which case the I<pattern> must "
"match the entire string\\&.  The I<repl> may be an empty string, in which "
"case the final `B</>\\&' may also be omitted\\&.  To quote the final `B</>"
"\\&' in other cases it should be preceded by a single backslash; this is not "
"necessary if the `B</>\\&' occurs inside a substituted parameter\\&.  Note "
"also that the `B<#>', `B<%>\\&' and `B<#%> are not active if they occur "
"inside a substituted parameter, even at the start\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:909
msgid ""
"If, after quoting rules apply, B<${>I<name>B<}> expands to an array, the "
"replacements act on each element individually\\&.  Note also the effect of "
"the B<I> and B<S> parameter expansion flags below; however, the flags B<M>, "
"B<R>, B<B>, B<E> and B<N> are not useful\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:917
#, no-wrap
msgid ""
"B<foo=\"twinkle twinkle little star\" sub=\"t*e\" rep=\"spy\"\n"
"print ${foo//${~sub}/$rep}\n"
"print ${(S)foo//${~sub}/$rep}>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:925
msgid ""
"Here, the `B<~>\\&' ensures that the text of B<$sub> is treated as a pattern "
"rather than a plain string\\&.  In the first case, the longest match for "
"B<t*e> is substituted and the result is `B<spy star>\\&', while in the "
"second case, the shortest matches are taken and the result is `B<spy spy "
"lispy star>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:926
#, no-wrap
msgid "B<${#>I<spec>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:936
msgid ""
"If I<spec> is one of the above substitutions, substitute the length in "
"characters of the result instead of the result itself\\&.  If I<spec> is an "
"array expression, substitute the number of elements of the result\\&.  This "
"has the side-effect that joining is skipped even in quoted forms, which may "
"affect other sub-expressions in I<spec>\\&.  Note that `B<^>\\&', `B<=>', "
"and `B<~>', below, must appear to the left of `B<#>\\&' when these forms are "
"combined\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:944
msgid ""
"If the option B<POSIX_IDENTIFIERS> is not set, and I<spec> is a simple name, "
"then the braces are optional; this is true even for special parameters so e"
"\\&.g\\&. B<$#-> and B<$#*> take the length of the string B<$-> and the "
"array B<$*> respectively\\&.  If B<POSIX_IDENTIFIERS> is set, then braces "
"are required for the B<#> to be treated in this fashion\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:945
#, no-wrap
msgid "B<${^>I<spec>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:956
msgid ""
"Turn on the B<RC_EXPAND_PARAM> option for the evaluation of I<spec>; if the "
"`B<^>\\&' is doubled, turn it off\\&.  When this option is set, array "
"expansions of the form I<foo>B<${>I<xx>B<}>I<bar>, where the parameter I<xx> "
"is set to B<(>I<a b c>B<)>, are substituted with `I<fooabar foobbar foocbar>"
"\\&' instead of the default `I<fooa b cbar>\\&'\\&.  Note that an empty "
"array will therefore cause all arguments to be removed\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:966
msgid ""
"Internally, each such expansion is converted into the equivalent list for "
"brace expansion\\&.  E\\&.g\\&., B<${^var}> becomes B<{$var[1],$var[2],>\\&."
"\\&.\\&.B<}>, and is processed as described in the section `Brace Expansion"
"\\&' below: note, however, the expansion happens immediately, with any "
"explicit brace expansion happening later\\&.  If word splitting is also in "
"effect the B<$var[>I<N>B<]> may themselves be split into different list "
"elements\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:967
#, no-wrap
msgid "B<${=>I<spec>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:975
msgid ""
"Perform word splitting using the rules for B<SH_WORD_SPLIT> during the "
"evaluation of I<spec>, but regardless of whether the parameter appears in "
"double quotes; if the `B<=>\\&' is doubled, turn it off\\&.  This forces "
"parameter expansions to be split into separate words before substitution, "
"using B<IFS> as a delimiter\\&.  This is done by default in most other shells"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:980
msgid ""
"Note that splitting is applied to I<word> in the assignment forms of I<spec> "
"I<before> the assignment to I<name> is performed\\&.  This affects the "
"result of array assignments with the B<A> flag\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:981
#, no-wrap
msgid "B<${~>I<spec>B<}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:989
msgid ""
"Turn on the B<GLOB_SUBST> option for the evaluation of I<spec>; if the `B<~>"
"\\&' is doubled, turn it off\\&.  When this option is set, the string "
"resulting from the expansion will be interpreted as a pattern anywhere that "
"is possible, such as in filename expansion and filename generation and "
"pattern-matching contexts like the right hand side of the `B<=>\\&' and `B<!"
"=>' operators in conditions\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:998
msgid ""
"In nested substitutions, note that the effect of the B<~> applies to the "
"result of the current level of substitution\\&.  A surrounding pattern "
"operation on the result may cancel it\\&.  Hence, for example, if the "
"parameter B<foo> is set to B<*>, B<${~foo//\\e*/*\\&.c}> is substituted by "
"the pattern B<*\\&.c>, which may be expanded by filename generation, but B<"
"${${~foo}//\\e*/*\\&.c}> substitutes to the string B<*\\&.c>, which will not "
"be further expanded\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1011
msgid ""
"If a B<${>\\&.\\&.\\&.B<}> type parameter expression or a B<$(>\\&.\\&.\\&."
"B<)> type command substitution is used in place of I<name> above, it is "
"expanded first and the result is used as if it were the value of I<name>"
"\\&.  Thus it is possible to perform nested operations: B<${${foo#head}%tail}"
"> substitutes the value of B<$foo> with both `B<head>\\&' and `B<tail>' "
"deleted\\&.  The form with B<$(>\\&.\\&.\\&.B<)> is often useful in "
"combination with the flags described next; see the examples below\\&.  Each "
"I<name> or nested B<${>\\&.\\&.\\&.B<}> in a parameter expansion may also be "
"followed by a subscript expression as described in I<Array Parameters> in "
"I<zshparam>(1)\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1020
msgid ""
"Note that double quotes may appear around nested expressions, in which case "
"only the part inside is treated as quoted; for example, B<${(f)\"$(foo)\"}> "
"quotes the result of B<$(foo)>, but the flag `B<(f)>\\&' (see below) is "
"applied using the rules for unquoted expansions\\&.  Note further that "
"quotes are themselves nested in this context; for example, in B<"
"\"${(@f)\"$(foo)\"}\">, there are two sets of quotes, one surrounding the "
"whole expression, the other (redundant) surrounding the B<$(foo)> as before"
"\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:1021
#, no-wrap
msgid "Parameter Expansion Flags"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1028
msgid ""
"If the opening brace is directly followed by an opening parenthesis, the "
"string up to the matching closing parenthesis will be taken as a list of "
"flags\\&.  In cases where repeating a flag is meaningful, the repetitions "
"need not be consecutive; for example, `(B<q%q%q>)\\&' means the same thing "
"as the more readable `(B<%%qqq>)\\&'\\&.  The following flags are supported:"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1030 contracorriente/man1/zshmisc.1:2666
#, no-wrap
msgid "B<#>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1036
msgid ""
"Evaluate the resulting words as numeric expressions and output the "
"characters corresponding to the resulting integer\\&.  Note that this form "
"is entirely distinct from use of the B<#> without parentheses\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1040
msgid ""
"If the B<MULTIBYTE> option is set and the number is greater than 127 (i\\&.e"
"\\&. not an ASCII character) it is treated as a Unicode character\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1049
msgid ""
"Expand all B<%> escapes in the resulting words in the same way as in prompts "
"(see EXPANSION OF PROMPT SEQUENCES in I<zshmisc>(1))\\&. If this flag is "
"given twice, full prompt expansion is done on the resulting words, depending "
"on the setting of the B<PROMPT_PERCENT>, B<PROMPT_SUBST> and B<PROMPT_BANG> "
"options\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1049 contracorriente/man1/zshexpn.1:2754
#, no-wrap
msgid "B<@>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1056
msgid ""
"In double quotes, array elements are put into separate words\\&.  E\\&.g"
"\\&., `B<\"${(@)foo}\">\\&' is equivalent to `B<\"${foo[@]}\">' and `B<"
"\"${(@)foo[1,2]}\">\\&' is the same as `B<\"$foo[1]\" \"$foo[2]\">'\\&.  "
"This is distinct from I<field splitting> by the B<f>, B<s> or B<z> flags, "
"which still applies within each array element\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1063
msgid ""
"Convert the substitution into an array expression, even if it otherwise "
"would be scalar\\&.  This has lower precedence than subscripting, so one "
"level of nested expansion is required in order that subscripts apply to "
"array elements\\&.  Thus B<${${(A>B<)>I<name>B<}[1]}> yields the full value "
"of I<name> when I<name> is scalar\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1074
msgid ""
"This assigns an array parameter with `B<${>\\&.\\&.\\&.B<=>\\&.\\&.\\&.B<}>"
"\\&', `B<${>\\&.\\&.\\&.B<:=>\\&.\\&.\\&.B<}>\\&' or `B<${>\\&.\\&.\\&.B<::=>"
"\\&.\\&.\\&.B<}>'\\&.  If this flag is repeated (as in `B<AA>\\&'), assigns "
"an associative array parameter\\&.  Assignment is made before sorting or "
"padding; if field splitting is active, the I<word> part is split before "
"assignment\\&.  The I<name> part may be a subscripted range for ordinary "
"arrays; when assigning an associative array, the I<word> part I<must> be "
"converted to an array, for example by using `B<${(AA)=>I<name>B<=>\\&.\\&."
"\\&.B<}>\\&' to activate field splitting\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1078
msgid ""
"Surrounding context such as additional nesting or use of the value in a "
"scalar assignment may cause the array to be joined back into a single string "
"again\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1085
msgid ""
"Sort in array index order; when combined with `B<O>\\&' sort in reverse "
"array index order\\&.  Note that `B<a>\\&' is therefore equivalent to the "
"default but `B<Oa>\\&' is useful for obtaining an array's elements in "
"reverse order\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1085 contracorriente/man1/zshexpn.1:2408
#, no-wrap
msgid "B<b>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1090
msgid ""
"Quote with backslashes only characters that are special to pattern matching"
"\\&. This is useful when the contents of the variable are to be tested using "
"B<GLOB_SUBST>, including the B<${~>I<\\&.\\&.\\&.>B<}> switch\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1095
msgid ""
"Quoting using one of the B<q> family of flags does not work for this purpose "
"since quotes are not stripped from non-pattern characters by B<GLOB_SUBST>"
"\\&.  In other words,"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1100
#, no-wrap
msgid ""
"B<pattern=${(q)str}\n"
"[[ $str = ${~pattern} ]]>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1104
msgid "works if B<$str> is `B<a*b>\\&' but not if it is `B<a b>', whereas"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1109
#, no-wrap
msgid ""
"B<pattern=${(b)str}\n"
"[[ $str = ${~pattern} ]]>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1113
msgid "is always true for any possible value of B<$str>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1120
msgid ""
"With B<${#>I<name>B<}>, count the total number of characters in an array, as "
"if the elements were concatenated with spaces between them\\&.  This is not "
"a true join of the array, so other expressions used with this flag may have "
"an effect on the elements of the array before it is counted\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1120 contracorriente/man1/zshmisc.1:2675
#, no-wrap
msgid "B<C>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1125
msgid ""
"Capitalize the resulting words\\&.  `Words\\&' in this case refers to "
"sequences of alphanumeric characters separated by non-alphanumerics, I<not> "
"to words that result from field splitting\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1125 contracorriente/man1/zshexpn.1:2995
#: contracorriente/man1/zshmisc.1:2690 contracorriente/man1/zshmodules.1:3496
#, no-wrap
msgid "B<D>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1133
msgid ""
"Assume the string or array elements contain directories and attempt to "
"substitute the leading part of these by names\\&.  The remainder of the path "
"(the whole of it if the leading part was not substituted)  is then quoted so "
"that the whole string can be used as a shell argument\\&.  This is the "
"reverse of `B<~>\\&' substitution: see the section FILENAME EXPANSION below"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1139
msgid ""
"Perform single word shell expansions, namely I<parameter expansion>, "
"I<command substitution> and I<arithmetic expansion>, on the result\\&. Such "
"expansions can be nested but too deep recursion may have unpredictable "
"effects\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1143
msgid ""
"Split the result of the expansion at newlines\\&. This is a shorthand for "
"`B<ps:\\en:>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1143 contracorriente/man1/zshexpn.1:2745
#, no-wrap
msgid "B<F>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1147
msgid ""
"Join the words of arrays together using newline as a separator\\&.  This is "
"a shorthand for `B<pj:\\en:>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1147
#, no-wrap
msgid "B<g:>I<opts>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1155
msgid ""
"Process escape sequences like the echo builtin when no options are given "
"(B<g::>)\\&.  With the B<o> option, octal escapes don\\&'t take a leading "
"zero\\&.  With the B<c> option, sequences like `B<^X>\\&' are also processed"
"\\&.  With the B<e> option, processes `B<\\eM-t>\\&' and similar sequences "
"like the print builtin\\&.  With both of the B<o> and B<e> options, behaves "
"like the print builtin except that in none of these modes is `B<\\ec>\\&' "
"interpreted\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1155 contracorriente/man1/zshexpn.1:2394
#: contracorriente/man1/zshparam.1:453
#, no-wrap
msgid "B<i>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1158
msgid ""
"Sort case-insensitively\\&.  May be combined with `B<n>\\&' or `B<O>'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1158 contracorriente/man1/zshparam.1:468
#, no-wrap
msgid "B<k>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1167
msgid ""
"If I<name> refers to an associative array, substitute the I<keys> (element "
"names) rather than the values of the elements\\&.  Used with subscripts "
"(including ordinary arrays), force indices or keys to be substituted even if "
"the subscript form refers to values\\&.  However, this flag may not be "
"combined with subscript ranges\\&.  With the B<KSH_ARRAYS> option a "
"subscript `B<[*]>\\&' or `B<[@]>' is needed to operate on the whole array, "
"as usual\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1167 contracorriente/man1/zshmisc.1:2705
#: contracorriente/man1/zshmodules.1:2910
#, no-wrap
msgid "B<L>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1170
msgid "Convert all letters in the result to lower case\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1170 contracorriente/man1/zshexpn.1:2998
#, no-wrap
msgid "B<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1178
msgid ""
"Sort decimal integers numerically; if the first differing characters of two "
"test strings are not digits, sorting is lexical\\&.  Integers with more "
"initial zeroes are sorted before those with fewer or none\\&.  Hence the "
"array `B<foo1 foo02 foo2 foo3 foo20 foo23>\\&' is sorted into the order shown"
"\\&.  May be combined with `B<i>\\&' or `B<O>'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1178
#, no-wrap
msgid "B<o>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1185
msgid ""
"Sort the resulting words in ascending order; if this appears on its own the "
"sorting is lexical and case-sensitive (unless the locale renders it case-"
"insensitive)\\&.  Sorting in ascending order is the default for other forms "
"of sorting, so this is ignored if combined with `B<a>\\&', `B<i>' or "
"`B<n>'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1185 contracorriente/man1/zshmodules.1:2916
#, no-wrap
msgid "B<O>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1190
msgid ""
"Sort the resulting words in descending order; `B<O>\\&' without `B<a>', `B<i>"
"\\&' or `B<n>' sorts in reverse lexical order\\&.  May be combined with `B<a>"
"\\&', `B<i>' or `B<n>' to reverse the order of sorting\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1197
msgid ""
"This forces the value of the parameter I<name> to be interpreted as a "
"further parameter name, whose value will be used where appropriate\\&.  Note "
"that flags set with one of the B<typeset> family of commands (in particular "
"case transformations) are not applied to the value of I<name> used in this "
"fashion\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1204
msgid ""
"If used with a nested parameter or command substitution, the result of that "
"will be taken as a parameter name in the same way\\&.  For example, if you "
"have `B<foo=bar>\\&' and `B<bar=baz>', the strings B<${(P)foo}>, B<"
"${(P)${foo}}>, and B<${(P)$(echo bar)}> will be expanded to `B<baz>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1212
msgid ""
"Likewise, if the reference is itself nested, the expression with the flag is "
"treated as if it were directly replaced by the parameter name\\&.  It is an "
"error if this nested substitution produces an array with more than one word"
"\\&.  For example, if `B<name=assoc>\\&' where the parameter B<assoc> is an "
"associative array, then `B<${${(P)name}[elt]}>\\&' refers to the element of "
"the associative subscripted `B<elt>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1218
msgid ""
"Quote characters that are special to the shell in the resulting words with "
"backslashes; unprintable or invalid characters are quoted using the B<$"
"\\&'\\e>I<NNN>B<'> form, with separate quotes for each octet\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1227
msgid ""
"If this flag is given twice, the resulting words are quoted in single quotes "
"and if it is given three times, the words are quoted in double quotes; in "
"these forms no special handling of unprintable or invalid characters is "
"attempted\\&.  If the flag is given four times, the words are quoted in "
"single quotes preceded by a B<$>\\&.  Note that in all three of these forms "
"quoting is done unconditionally, even if this does not change the way the "
"resulting string would be interpreted by the shell\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1232
msgid ""
"If a B<q-> is given (only a single B<q> may appear), a minimal form of "
"single quoting is used that only quotes the string if needed to protect "
"special characters\\&.  Typically this form gives the most readable output"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1237
msgid ""
"If a B<q+> is given, an extended form of minimal quoting is used that causes "
"unprintable characters to be rendered using B<$\\&'>I<\\&.\\&.\\&.>B<'>\\&.  "
"This quoting is similar to that used by the output of values by the "
"B<typeset> family of commands\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1241
msgid "Remove one level of quotes from the resulting words\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1241 contracorriente/man1/zshexpn.1:2808
#: contracorriente/man1/zshmisc.1:2720
#, no-wrap
msgid "B<t>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1249
msgid ""
"Use a string describing the type of the parameter where the value of the "
"parameter would usually appear\\&. This string consists of keywords "
"separated by hyphens (`B<->\\&')\\&. The first keyword in the string "
"describes the main type, it can be one of `B<scalar>\\&', `B<array>', "
"`B<integer>', `B<float>\\&' or `B<association>'\\&. The other keywords "
"describe the type in more detail:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1256
msgid "for local parameters"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1256
#, no-wrap
msgid "B<left>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1259
msgid "for left justified parameters"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1259
#, no-wrap
msgid "B<right_blanks>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1262
msgid "for right justified parameters with leading blanks"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1262
#, no-wrap
msgid "B<right_zeros>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1265
msgid "for right justified parameters with leading zeros"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1265
#, no-wrap
msgid "B<lower>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1269
msgid ""
"for parameters whose value is converted to all lower case when it is expanded"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1269
#, no-wrap
msgid "B<upper>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1273
msgid ""
"for parameters whose value is converted to all upper case when it is expanded"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1276
msgid "for readonly parameters"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1276
#, no-wrap
msgid "B<tag>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1279
msgid "for tagged parameters"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1279
#, no-wrap
msgid "B<export>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1282
msgid "for exported parameters"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1282
#, no-wrap
msgid "B<unique>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1285
msgid "for arrays which keep only the first occurrence of duplicated values"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1285
#, no-wrap
msgid "B<hide>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1288
msgid "for parameters with the `hide\\&' flag"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1288
#, no-wrap
msgid "B<hideval>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1291
msgid "for parameters with the `hideval\\&' flag"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1291 contracorriente/man1/zshzle.1:2632
#, no-wrap
msgid "B<special>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1294
msgid "for special parameters defined by the shell"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1298
msgid "Expand only the first occurrence of each unique word\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1298 contracorriente/man1/zshexpn.1:2567
#: contracorriente/man1/zshexpn.1:2913
#, no-wrap
msgid "B<U>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1301
msgid "Convert all letters in the result to upper case\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1301 contracorriente/man1/zshmisc.1:2723
#, no-wrap
msgid "B<v>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1307
msgid ""
"Used with B<k>, substitute (as two consecutive words) both the key and the "
"value of each associative array element\\&.  Used with subscripts, force "
"values to be substituted even if the subscript form refers to indices or keys"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1307 contracorriente/man1/zshmisc.1:2726
#, no-wrap
msgid "B<V>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1310
msgid "Make any special characters in the resulting words visible\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1314
msgid ""
"With B<${#>I<name>B<}>, count words in arrays or strings; the B<s> flag may "
"be used to set a word delimiter\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1314 contracorriente/man1/zshexpn.1:2796
#, no-wrap
msgid "B<W>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1318
msgid ""
"Similar to B<w> with the difference that empty words between repeated "
"delimiters are also counted\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1318 contracorriente/man1/zshexpn.1:2799
#, no-wrap
msgid "B<X>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1324
msgid ""
"With this flag, parsing errors occurring with the B<Q>, B<e> and B<#> flags "
"or the pattern matching forms such as `B<${>I<name>B<#>I<pattern>B<}>\\&' "
"are reported\\&.  Without the flag, errors are silently ignored\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1324
#, no-wrap
msgid "B<z>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1331
msgid ""
"Split the result of the expansion into words using shell parsing to find the "
"words, i\\&.e\\&. taking into account any quoting in the value\\&.  Comments "
"are not treated specially but as ordinary strings, similar to interactive "
"shells with the B<INTERACTIVE_COMMENTS> option unset (however, see the B<Z> "
"flag below for related options)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1337
msgid ""
"Note that this is done very late, even later than the `B<(s)>\\&' flag\\&. "
"So to access single words in the result use nested expansions as in `B<"
"${${(z)foo}[2]}>\\&'\\&. Likewise, to remove the quotes in the resulting "
"words use `B<${(Q)${(z)foo}}>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1342
msgid ""
"Split the result of the expansion on null bytes\\&.  This is a shorthand for "
"`B<ps:\\e0:>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1348
msgid ""
"The following flags (except B<p>) are followed by one or more arguments as "
"shown\\&.  Any character, or the matching pairs `B<(>\\&.\\&.\\&.B<)>\\&', "
"`B<{>\\&.\\&.\\&.B<}>\\&', `B<[>\\&.\\&.\\&.B<]>', or `B<E<lt>>\\&.\\&.\\&."
"B<E<gt>>', may be used in place of a colon as delimiters, but note that when "
"a flag takes more than one argument, a matched pair of delimiters must "
"surround each argument\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1356
msgid ""
"Recognize the same escape sequences as the B<print> builtin in string "
"arguments to any of the flags described below that follow this argument\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1362
msgid ""
"Alternatively, with this option string arguments may be in the form B<"
"$>I<var> in which case the value of the variable is substituted\\&.  Note "
"this form is strict; the string argument does not undergo general parameter "
"expansion\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1370
#, no-wrap
msgid ""
"B<sep=:\n"
"val=a:b:c\n"
"print ${(ps\\&.$sep\\&.)val}>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1374
msgid "splits the variable on a B<:>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1375 contracorriente/man1/zshmisc.1:2685
#, no-wrap
msgid "B<~>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1382
msgid ""
"Strings inserted into the expansion by any of the flags below are to be "
"treated as patterns\\&.  This applies to the string arguments of flags that "
"follow B<~> within the same set of parentheses\\&.  Compare with B<~> "
"outside parentheses, which forces the entire substituted string to be "
"treated as a pattern\\&.  Hence, for example,"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1387
#, no-wrap
msgid "B<[[ \"?\" = ${(~j\\&.|\\&.)array} ]]>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1394
msgid ""
"treats `B<|>\\&' as a pattern and succeeds if and only if B<$array> contains "
"the string `B<?>\\&' as an element\\&.  The B<~> may be repeated to toggle "
"the behaviour; its effect only lasts to the end of the parenthesised group"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1395
#, no-wrap
msgid "B<j:>I<string>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1400
msgid ""
"Join the words of arrays together using I<string> as a separator\\&.  Note "
"that this occurs before field splitting by the B<s:>I<string>B<:> flag or "
"the B<SH_WORD_SPLIT> option\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1400
#, no-wrap
msgid "B<l:>I<expr>B<::>I<string1>B<::>I<string2>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1404
msgid ""
"Pad the resulting words on the left\\&.  Each word will be truncated if "
"required and placed in a field I<expr> characters wide\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1414
msgid ""
"The arguments B<:>I<string1>B<:> and B<:>I<string2>B<:> are optional; "
"neither, the first, or both may be given\\&.  Note that the same pairs of "
"delimiters must be used for each of the three arguments\\&.  The space to "
"the left will be filled with I<string1> (concatenated as often as needed) or "
"spaces if I<string1> is not given\\&.  If both I<string1> and I<string2> are "
"given, I<string2> is inserted once directly to the left of each word, "
"truncated if necessary, before I<string1> is used to produce any remaining "
"padding\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1418
msgid ""
"If either of I<string1> or I<string2> is present but empty, i\\&.e\\&. there "
"are two delimiters together at that point, the first character of B<$IFS> is "
"used instead\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1423
msgid ""
"If the B<MULTIBYTE> option is in effect, the flag B<m> may also be given, in "
"which case widths will be used for the calculation of padding; otherwise "
"individual multibyte characters are treated as occupying one unit of width"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1426
msgid ""
"If the B<MULTIBYTE> option is not in effect, each byte in the string is "
"treated as occupying one unit of width\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1429
msgid ""
"Control characters are always assumed to be one unit wide; this allows the "
"mechanism to be used for generating repetitions of control characters\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1430 contracorriente/man1/zshexpn.1:2483
#, no-wrap
msgid "B<m>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1441
msgid ""
"Only useful together with one of the flags B<l> or B<r> or with the B<#> "
"length operator when the B<MULTIBYTE> option is in effect\\&.  Use the "
"character width reported by the system in calculating how much of the string "
"it occupies or the overall length of the string\\&.  Most printable "
"characters have a width of one unit, however certain Asian character sets "
"and certain special effects use wider characters; combining characters have "
"zero width\\&.  Non-printable characters are arbitrarily counted as zero "
"width; how they would actually be displayed will vary\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1448
msgid ""
"If the B<m> is repeated, the character either counts zero (if it has zero "
"width), else one\\&.  For printable character strings this has the effect of "
"counting the number of glyphs (visibly separate characters), except for the "
"case where combining characters themselves have non-zero width (true in "
"certain alphabets)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1449
#, no-wrap
msgid "B<r:>I<expr>B<::>I<string1>B<::>I<string2>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1453
msgid ""
"As B<l>, but pad the words on the right and insert I<string2> immediately to "
"the right of the string to be padded\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1459
msgid ""
"Left and right padding may be used together\\&.  In this case the strategy "
"is to apply left padding to the first half width of each of the resulting "
"words, and right padding to the second half\\&.  If the string to be padded "
"has odd width the extra padding is applied on the left\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1460 contracorriente/man1/zshparam.1:389
#, no-wrap
msgid "B<s:>I<string>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1469
msgid ""
"Force field splitting at the separator I<string>\\&.  Note that a I<string> "
"of two or more characters means that all of them must match in sequence; "
"this differs from the treatment of two or more characters in the B<IFS> "
"parameter\\&.  See also the B<=> flag and the B<SH_WORD_SPLIT> option\\&.  "
"An empty string may also be given in which case every character will be a "
"separate element\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1474
msgid ""
"For historical reasons, the usual behaviour that empty array elements are "
"retained inside double quotes is disabled for arrays generated by splitting; "
"hence the following:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1479
#, no-wrap
msgid ""
"B<line=\"one::three\"\n"
"print -l \"${(s\\&.:\\&.)line}\">\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1485
msgid ""
"produces two lines of output for B<one> and B<three> and elides the empty "
"field\\&.  To override this behaviour, supply the `B<(@)>\\&' flag as well, i"
"\\&.e\\&.  B<\"${(@s\\&.:\\&.)line}\">\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1486
#, no-wrap
msgid "B<Z:>I<opts>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1501
msgid ""
"As B<z> but takes a combination of option letters between a following pair "
"of delimiter characters\\&.  With no options the effect is identical to B<z>"
"\\&.  B<(Z+c+)> causes comments to be parsed as a string and retained; any "
"field in the resulting array beginning with an unquoted comment character is "
"a comment\\&.  B<(Z+C+)> causes comments to be parsed and removed\\&.  The "
"rule for comments is standard: anything between a word starting with the "
"third character of B<$HISTCHARS>, default B<#>, up to the next newline is a "
"comment\\&.  B<(Z+n+)> causes unquoted newlines to be treated as ordinary "
"whitespace, else they are treated as if they are shell code delimiters and "
"converted to semicolons\\&.  Options are combined within the same set of "
"delimiters, e\\&.g\\&. B<(Z+Cn+)>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1501
#, no-wrap
msgid "B<_:>I<flags>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1507
msgid ""
"The underscore (B<_>) flag is reserved for future use\\&.  As of this "
"revision of zsh, there are no valid I<flags>; anything following an "
"underscore, other than an empty pair of delimiters, is treated as an error, "
"and the flag itself has no effect\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1511
msgid ""
"The following flags are meaningful with the B<${>\\&.\\&.\\&.B<#>\\&.\\&.\\&."
"B<}> or B<${>\\&.\\&.\\&.B<%>\\&.\\&.\\&.B<}> forms\\&.  The B<S> and B<I> "
"flags may also be used with the B<${>\\&.\\&.\\&.B</>\\&.\\&.\\&.B<}> forms"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1513 contracorriente/man1/zshexpn.1:2805
#: contracorriente/man1/zshmisc.1:2714 contracorriente/man1/zshmodules.1:3491
#, no-wrap
msgid "B<S>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1519
msgid ""
"With B<#> or B<##>, search for the match that starts closest to the start of "
"the string (a `substring match\\&')\\&. Of all matches at a particular "
"position, B<#> selects the shortest and B<##> the longest:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1529
#, no-wrap
msgid ""
"B<% str=\"aXbXc\"\n"
"% echo ${(S)str#X*}\n"
"abXc\n"
"% echo ${(S)str##X*}\n"
"a\n"
"% >\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1534
msgid ""
"With B<%> or B<%%>, search for the match that starts closest to the end of "
"the string:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1543
#, no-wrap
msgid ""
"B<% str=\"aXbXc\"\n"
"% echo ${(S)str%X*}\n"
"aXbc\n"
"% echo ${(S)str%%X*}\n"
"aXb\n"
"% >\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1548
msgid ""
"(Note that B<%> and B<%%> don\\&'t search for the match that ends closest to "
"the end of the string, as one might expect\\&.)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1552
msgid ""
"With substitution via B<${>\\&.\\&.\\&.B</>\\&.\\&.\\&.B<}> or B<${>\\&.\\&."
"\\&.B<//>\\&.\\&.\\&.B<}>, specifies non-greedy matching, i\\&.e\\&. that "
"the shortest instead of the longest match should be replaced:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1561
#, no-wrap
msgid ""
"B<% str=\"abab\"\n"
"% echo ${str/*b/_}\n"
"_\n"
"% echo ${(S)str/*b/_}\n"
"_ab\n"
"% >\n"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1564
#, no-wrap
msgid "B<I:>I<expr>B<:>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1571
msgid ""
"Search the I<expr>th match (where I<expr> evaluates to a number)\\&.  This "
"only applies when searching for substrings, either with the B<S> flag, or "
"with B<${>\\&.\\&.\\&.B</>\\&.\\&.\\&.B<}> (only the I<expr>th match is "
"substituted) or B<${>\\&.\\&.\\&.B<//>\\&.\\&.\\&.B<}> (all matches from the "
"I<expr>th on are substituted)\\&.  The default is to take the first match\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1579
msgid ""
"The I<expr>th match is counted such that there is either one or zero matches "
"from each starting position in the string, although for global substitution "
"matches overlapping previous replacements are ignored\\&.  With the B<${>\\&."
"\\&.\\&.B<%>\\&.\\&.\\&.B<}> and B<${>\\&.\\&.\\&.B<%%>\\&.\\&.\\&.B<}> "
"forms, the starting position for the match moves backwards from the end as "
"the index increases, while with the other forms it moves forward from the "
"start\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1581
msgid "Hence with the string"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1584
#, no-wrap
msgid "B<which switch is the right switch for Ipswich?>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1595
msgid ""
"substitutions of the form B<${>(B<SI:>I<N>B<:>)B<string#w*ch}> as I<N> "
"increases from 1 will match and remove `B<which>\\&', `B<witch>', `B<witch>' "
"and `B<wich>\\&'; the form using `B<##>' will match and remove `B<which "
"switch is the right switch for Ipswich>\\&', `B<witch is the right switch "
"for Ipswich>\\&', `B<witch for Ipswich>' and `B<wich>'\\&. The form using `B<"
"%>' will remove the same matches as for `B<#>\\&', but in reverse order, and "
"the form using `B<%%>\\&' will remove the same matches as for `B<##>' in "
"reverse order\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1596 contracorriente/man1/zshexpn.1:2466
#, no-wrap
msgid "B<B>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1599
msgid "Include the index of the beginning of the match in the result\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1599 contracorriente/man1/zshexpn.1:2790
#, no-wrap
msgid "B<E>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1603
msgid ""
"Include the index one character past the end of the match in the result "
"(note this is inconsistent with other uses of parameter index)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1603 contracorriente/man1/zshexpn.1:2510
#: contracorriente/man1/zshexpn.1:2985
#, no-wrap
msgid "B<M>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1606
msgid "Include the matched portion in the result\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1606 contracorriente/man1/zshexpn.1:2992
#, no-wrap
msgid "B<N>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1609
msgid "Include the length of the match in the result\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1609 contracorriente/man1/zshexpn.1:2793
#: contracorriente/man1/zshparam.1:429
#, no-wrap
msgid "B<R>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1612
msgid "Include the unmatched portion in the result (the I<R>est)\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:1613
#, no-wrap
msgid "Rules"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1620
msgid ""
"Here is a summary of the rules for substitution; this assumes that braces "
"are present around the substitution, i\\&.e\\&. B<${>I<\\&.\\&.\\&.>B<}>"
"\\&.  Some particular examples are given below\\&.  Note that the Zsh "
"Development Group accepts I<no responsibility> for any brain damage which "
"may occur during the reading of the following rules\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1622
#, no-wrap
msgid "B<1\\&.> I<Nested substitution>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1634
msgid ""
"If multiple nested B<${>I<\\&.\\&.\\&.>B<}> forms are present, substitution "
"is performed from the inside outwards\\&.  At each level, the substitution "
"takes account of whether the current value is a scalar or an array, whether "
"the whole substitution is in double quotes, and what flags are supplied to "
"the current level of substitution, just as if the nested substitution were "
"the outermost\\&.  The flags are not propagated up to enclosing "
"substitutions; the nested substitution will return either a scalar or an "
"array as determined by the flags, possibly adjusted for quoting\\&.  All the "
"following steps take place where applicable at all levels of substitution\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1642
msgid ""
"Note that, unless the `B<(P)>\\&' flag is present, the flags and any "
"subscripts apply directly to the value of the nested substitution; for "
"example, the expansion B<${${foo}}> behaves exactly the same as B<${foo}>"
"\\&.  When the `B<(P)>\\&' flag is present in a nested substitution, the "
"other substitution rules are applied to the value I<before> it is "
"interpreted as a name, so B<${${(P)foo}}> may differ from B<${(P)foo}>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1652
msgid ""
"At each nested level of substitution, the substituted words undergo all "
"forms of single-word substitution (i\\&.e\\&. not filename generation), "
"including command substitution, arithmetic expansion and filename expansion "
"(i\\&.e\\&. leading B<~> and B<=>)\\&.  Thus, for example, B<${${:-=cat}:h}> "
"expands to the directory where the B<cat> program resides\\&.  (Explanation: "
"the internal substitution has no parameter but a default value B<=cat>, "
"which is expanded by filename expansion to a full path; the outer "
"substitution then applies the modifier B<:h> and takes the directory part of "
"the path\\&.)"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1653
#, no-wrap
msgid "B<2\\&.> I<Internal parameter flags>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1660
msgid ""
"Any parameter flags set by one of the B<typeset> family of commands, in "
"particular the B<-L>, B<-R>, B<-Z>, B<-u> and B<-l> options for padding and "
"capitalization, are applied directly to the parameter value\\&.  Note these "
"flags are options to the command, e\\&.g\\&. `B<typeset -Z>\\&'; they are "
"not the same as the flags used within parameter substitutions\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1668
msgid ""
"At the outermost level of substitution, the `B<(P)>\\&' flag (rule B<4\\&."
">)  ignores these transformations and uses the unmodified value of the "
"parameter as the name to be replaced\\&.  This is usually the desired "
"behavior because padding may make the value syntactically illegal as a "
"parameter name, but if capitalization changes are desired, use the B<"
"${${(P)foo}}> form (rule B<25\\&.>)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1669
#, no-wrap
msgid "B<3\\&.> I<Parameter subscripting>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1680
msgid ""
"If the value is a raw parameter reference with a subscript, such as B<"
"${>I<var>B<[3]}>, the effect of subscripting is applied directly to the "
"parameter\\&.  Subscripts are evaluated left to right; subsequent subscripts "
"apply to the scalar or array value yielded by the previous subscript\\&.  "
"Thus if B<var> is an array, B<${var[1][2]}> is the second character of the "
"first word, but B<${var[2,4][2]}> is the entire third word (the second word "
"of the range of words two through four of the original array)\\&.  Any "
"number of subscripts may appear\\&.  Flags such as `B<(k)>\\&' and `B<(v)>' "
"which alter the result of subscripting are applied\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1680
#, no-wrap
msgid "B<4\\&.> I<Parameter name replacement>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1687
msgid ""
"At the outermost level of nesting only, the `B<(P)>\\&' flag is applied\\&.  "
"This treats the value so far as a parameter name (which may include a "
"subscript expression) and replaces that with the corresponding value\\&.  "
"This replacement occurs later if the `B<(P)>\\&' flag appears in a nested "
"substitution\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1691
msgid ""
"If the value so far names a parameter that has internal flags (rule B<2\\&."
">), those internal flags are applied to the new value after replacement\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1692
#, no-wrap
msgid "B<5\\&.> I<Double-quoted joining>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1701
msgid ""
"If the value after this process is an array, and the substitution appears in "
"double quotes, and neither an `B<(@)>\\&' flag nor a `B<#>' length operator "
"is present at the current level, then words of the value are joined with the "
"first character of the parameter B<$IFS>, by default a space, between each "
"word (single word arrays are not modified)\\&.  If the `B<(j)>\\&' flag is "
"present, that is used for joining instead of B<$IFS>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1701
#, no-wrap
msgid "B<6\\&.> I<Nested subscripting>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1710
msgid ""
"Any remaining subscripts (i\\&.e\\&. of a nested substitution) are evaluated "
"at this point, based on whether the value is an array or a scalar\\&.  As "
"with B<3\\&.>, multiple subscripts can appear\\&.  Note that B<${foo[2,4][2]}"
"> is thus equivalent to B<${${foo[2,4]}[2]}> and also to B<\"${${(@)foo[2,4]}"
"[2]}\"> (the nested substitution returns an array in both cases), but not to "
"B<\"${${foo[2,4]}[2]}\"> (the nested substitution returns a scalar because "
"of the quotes)\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1710
#, no-wrap
msgid "B<7\\&.> I<Modifiers>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1716
msgid ""
"Any modifiers, as specified by a trailing `B<#>\\&', `B<%>', `B</"
">' (possibly doubled) or by a set of modifiers of the form `B<:\\&.\\&.\\&.>"
"\\&' (see the section `Modifiers\\&' in the section `History Expansion'), "
"are applied to the words of the value at this level\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1716
#, no-wrap
msgid "B<8\\&.> I<Character evaluation>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1720
msgid ""
"Any `B<(#)>\\&' flag is applied, evaluating the result so far numerically as "
"a character\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1720
#, no-wrap
msgid "B<9\\&.> I<Length>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1724
msgid ""
"Any initial `B<#>\\&' modifier, i\\&.e\\&. in the form B<${#>I<var>B<}>, is "
"used to evaluate the length of the expression so far\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1724
#, no-wrap
msgid "B<10\\&.> I<Forced joining>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1732
msgid ""
"If the `B<(j)>\\&' flag is present, or no `B<(j)>' flag is present but the "
"string is to be split as given by rule B<11\\&.>, and joining did not take "
"place at rule B<5\\&.>, any words in the value are joined together using the "
"given string or the first character of B<$IFS> if none\\&.  Note that the "
"`B<(F)>\\&' flag implicitly supplies a string for joining in this manner\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1732
#, no-wrap
msgid "B<11\\&.> I<Simple word splitting>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1738
msgid ""
"If one of the `B<(s)>\\&' or `B<(f)>' flags are present, or the `B<=>' "
"specifier was present (e\\&.g\\&. B<${=>I<var>B<}>), the word is split on "
"occurrences of the specified string, or (for B<=> with neither of the two "
"flags present) any of the characters in B<$IFS>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1744
msgid ""
"If no `B<(s)>\\&', `B<(f)>' or `B<=>' was given, but the word is not quoted "
"and the option B<SH_WORD_SPLIT> is set, the word is split on occurrences of "
"any of the characters in B<$IFS>\\&.  Note this step, too, takes place at "
"all levels of a nested substitution\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1745
#, no-wrap
msgid "B<12\\&.> I<Case modification>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1749
msgid ""
"Any case modification from one of the flags `B<(L)>\\&', `B<(U)>' or "
"`B<(C)>' is applied\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1749
#, no-wrap
msgid "B<13\\&.> I<Escape sequence replacement>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1753
msgid ""
"First any replacements from the `B<(g)>\\&' flag are performed, then any "
"prompt-style formatting from the `B<(%)>\\&' family of flags is applied\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1753
#, no-wrap
msgid "B<14\\&.> I<Quote application>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1757
msgid ""
"Any quoting or unquoting using `B<(q)>\\&' and `B<(Q)>' and related flags is "
"applied\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1757
#, no-wrap
msgid "B<15\\&.> I<Directory naming>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1760
msgid "Any directory name substitution using `B<(D)>\\&' flag is applied\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1760
#, no-wrap
msgid "B<16\\&.> I<Visibility enhancement>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1764
msgid ""
"Any modifications to make characters visible using the `B<(V)>\\&' flag are "
"applied\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1764
#, no-wrap
msgid "B<17\\&.> I<Lexical word splitting>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1772
msgid ""
"If the \\&'B<(z)>' flag or one of the forms of the 'B<(Z)>' flag is present, "
"the word is split as if it were a shell command line, so that quotation "
"marks and other metacharacters are used to decide what constitutes a word"
"\\&.  Note this form of splitting is entirely distinct from that described "
"by rule B<11\\&.>: it does not use B<$IFS>, and does not cause forced joining"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1772
#, no-wrap
msgid "B<18\\&.> I<Uniqueness>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1776
msgid ""
"If the result is an array and the `B<(u)>\\&' flag was present, duplicate "
"elements are removed from the array\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1776
#, no-wrap
msgid "B<19\\&.> I<Ordering>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1780
msgid ""
"If the result is still an array and one of the `B<(o)>\\&' or `B<(O)>' flags "
"was present, the array is reordered\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1780
#, no-wrap
msgid "B<20\\&.> B<RC_EXPAND_PARAM>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1785
msgid ""
"At this point the decision is made whether any resulting array elements are "
"to be combined element by element with surrounding text, as given by either "
"the B<RC_EXPAND_PARAM> option or the `B<^>\\&' flag\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1785
#, no-wrap
msgid "B<21\\&.> I<Re-evaluation>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1790
msgid ""
"Any `B<(e)>\\&' flag is applied to the value, forcing it to be re-examined "
"for new parameter substitutions, but also for command and arithmetic "
"substitutions\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1790
#, no-wrap
msgid "B<22\\&.> I<Padding>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1794
msgid ""
"Any padding of the value by the `B<(l\\&.>I<fill>B<\\&.)>\\&' or `B<(r\\&."
">I<fill>B<\\&.)>\\&' flags is applied\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1794
#, no-wrap
msgid "B<23\\&.> I<Semantic joining>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1801
msgid ""
"In contexts where expansion semantics requires a single word to result, all "
"words are rejoined with the first character of B<IFS> between\\&.  So in `B<"
"${(P>B<)${(f>B<)lines}}>\\&' the value of B<${lines}> is split at newlines, "
"but then must be joined again before the `B<(P)>\\&' flag can be applied\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1804
msgid "If a single word is not required, this rule is skipped\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1805
#, no-wrap
msgid "B<24\\&.> I<Empty argument removal>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1810
msgid ""
"If the substitution does not appear in double quotes, any resulting zero-"
"length argument, whether from a scalar or an element of an array, is elided "
"from the list of arguments inserted into the command line\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1815
msgid ""
"Strictly speaking, the removal happens later as the same happens with other "
"forms of substitution; the point to note here is simply that it occurs after "
"any of the above parameter operations\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1816
#, no-wrap
msgid "B<25\\&.> I<Nested parameter name replacement>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1822
msgid ""
"If the `B<(P)>\\&' flag is present and rule B<4\\&.> has not applied, the "
"value so far is treated as a parameter name (which may include a subscript "
"expression) and replaced with the corresponding value, with internal flags "
"(rule B<2\\&.>) applied to the new value\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1831
msgid ""
"The flag B<f> is useful to split a double-quoted substitution line by line"
"\\&.  For example, B<${(f)\"$(E<lt>>I<file>B<)\"}> substitutes the contents "
"of I<file> divided so that each line is an element of the resulting array"
"\\&.  Compare this with the effect of B<$>B<(E<lt>>I<file>B<)> alone, which "
"divides the file up by words, or the same inside double quotes, which makes "
"the entire content of the file a single string\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1834
msgid ""
"The following illustrates the rules for nested parameter expansions\\&.  "
"Suppose that B<$foo> contains the array B<(bar baz>B<)>:"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1836
#, no-wrap
msgid "B<\"${(@)${foo}[1]}\">"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1844
msgid ""
"This produces the result B<b>\\&.  First, the inner substitution B<"
"\"${foo}\">, which has no array (B<@>) flag, produces a single word result B<"
"\"bar baz\">\\&.  The outer substitution B<\"${(@)\\&.\\&.\\&.[1]}\"> "
"detects that this is a scalar, so that (despite the `B<(@)>\\&' flag) the "
"subscript picks the first character\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1844
#, no-wrap
msgid "B<\"${${(@)foo}[1]}\">"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1850
msgid ""
"This produces the result `B<bar>\\&'\\&.  In this case, the inner "
"substitution B<\"${(@)foo}\"> produces the array `B<(bar baz>B<)>\\&'\\&.  "
"The outer substitution B<\"${\\&.\\&.\\&.[1]}\"> detects that this is an "
"array and picks the first word\\&.  This is similar to the simple case B<"
"\"${foo[1]}\">\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1853
msgid ""
"As an example of the rules for word splitting and joining, suppose B<$foo> "
"contains the array `B<(ax1 bx1>B<)>\\&'\\&.  Then"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1855
#, no-wrap
msgid "B<${(s/x/)foo}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1859
msgid "produces the words `B<a>\\&', `B<1 b>' and `B<1>'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1859
#, no-wrap
msgid "B<${(j/x/s/x/)foo}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1862
msgid "produces `B<a>\\&', `B<1>', `B<b>' and `B<1>'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:1862
#, no-wrap
msgid "B<${(s/x/)foo%%1*}>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1869
msgid ""
"produces `B<a>\\&' and `B< b>' (note the extra space)\\&.  As substitution "
"occurs before either joining or splitting, the operation first generates the "
"modified array B<(ax bx>B<)>, which is joined to give B<\"ax bx\">, and then "
"split to give `B<a>\\&', `B< b>' and `'\\&.  The final empty string will "
"then be elided, as it is not in double quotes\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:1870
#, no-wrap
msgid "COMMAND SUBSTITUTION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1877
msgid ""
"A command enclosed in parentheses preceded by a dollar sign, like `B<$(>\\&."
"\\&.\\&.B<)>\\&', or quoted with grave accents, like `B<`>\\&.\\&.\\&.B<`>"
"\\&', is replaced with its standard output, with any trailing newlines "
"deleted\\&.  If the substitution is not enclosed in double quotes, the "
"output is broken into words using the B<IFS> parameter\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1883
msgid ""
"The substitution `B<$(cat> I<foo>B<)>\\&' may be replaced by the faster `B<"
"$(E<lt>>I<foo>B<)>\\&'\\&.  In this case I<foo> undergoes single word shell "
"expansions (I<parameter expansion>, I<command substitution> and I<arithmetic "
"expansion>), but not filename generation\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1887
msgid ""
"If the option B<GLOB_SUBST> is set, the result of any unquoted command "
"substitution, including the special form just mentioned, is eligible for "
"filename generation\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:1888
#, no-wrap
msgid "ARITHMETIC EXPANSION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1895
msgid ""
"A string of the form `B<$[>I<exp>B<]>\\&' or `B<$((>I<exp>B<))>\\&' is "
"substituted with the value of the arithmetic expression I<exp>\\&.  I<exp> "
"is subjected to I<parameter expansion>, I<command substitution> and "
"I<arithmetic expansion> before it is evaluated\\&.  See the section "
"`Arithmetic Evaluation\\&'\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:1895
#, no-wrap
msgid "BRACE EXPANSION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1903
msgid ""
"A string of the form `I<foo>B<{>I<xx>B<,>I<yy>B<,>I<zz>B<}>I<bar>\\&' is "
"expanded to the individual words `I<fooxxbar>\\&', `I<fooyybar>' and "
"`I<foozzbar>'\\&.  Left-to-right order is preserved\\&.  This construct may "
"be nested\\&.  Commas may be quoted in order to include them literally in a "
"word\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1912
msgid ""
"An expression of the form `B<{>I<n1>B<\\&.\\&.>I<n2>B<}>\\&', where I<n1> "
"and I<n2> are integers, is expanded to every number between I<n1> and I<n2> "
"inclusive\\&.  If either number begins with a zero, all the resulting "
"numbers will be padded with leading zeroes to that minimum width, but for "
"negative numbers the B<-> character is also included in the width\\&.  If "
"the numbers are in decreasing order the resulting sequence will also be in "
"decreasing order\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1922
msgid ""
"An expression of the form `B<{>I<n1>B<\\&.\\&.>I<n2>B<\\&.\\&.>I<n3>B<}>"
"\\&', where I<n1>, I<n2>, and I<n3> are integers, is expanded as above, but "
"only every I<n3>th number starting from I<n1> is output\\&.  If I<n3> is "
"negative the numbers are output in reverse order, this is slightly different "
"from simply swapping I<n1> and I<n2> in the case that the step I<n3> doesn"
"\\&'t evenly divide the range\\&.  Zero padding can be specified in any of "
"the three numbers, specifying it in the third can be useful to pad for "
"example `B<{-99\\&.\\&.100\\&.\\&.01}>\\&' which is not possible to specify "
"by putting a 0 on either of the first two numbers (i\\&.e\\&. pad to two "
"characters)\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1932
msgid ""
"An expression of the form `B<{>I<c1>B<\\&.\\&.>I<c2>B<}>\\&', where I<c1> "
"and I<c2> are single characters (which may be multibyte characters), is "
"expanded to every character in the range from I<c1> to I<c2> in whatever "
"character sequence is used internally\\&.  For characters with code points "
"below 128 this is US ASCII (this is the only case most users will need)\\&.  "
"If any intervening character is not printable, appropriate quotation is used "
"to render it printable\\&.  If the character sequence is reversed, the "
"output is in reverse order, e\\&.g\\&. `B<{d\\&.\\&.a}>\\&' is substituted "
"as `B<d c b a>'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1944
msgid ""
"If a brace expression matches none of the above forms, it is left unchanged, "
"unless the option B<BRACE_CCL> (an abbreviation for `brace character class"
"\\&') is set\\&.  In that case, it is expanded to a list of the individual "
"characters between the braces sorted into the order of the characters in the "
"ASCII character set (multibyte characters are not currently handled)\\&.  "
"The syntax is similar to a B<[>\\&.\\&.\\&.B<]> expression in filename "
"generation: `B<->\\&' is treated specially to denote a range of characters, "
"but `B<^>' or `B<!>\\&' as the first character is treated normally\\&.  For "
"example, `B<{abcdef0-9}>\\&' expands to 16 words B<0 1 2 3 4 5 6 7 8 9 a b c "
"d e f>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1952
msgid ""
"Note that brace expansion is not part of filename generation (globbing); an "
"expression such as B<*/{foo,bar}> is split into two separate words B<*/foo> "
"and B<*/bar> before filename generation takes place\\&.  In particular, note "
"that this is liable to produce a `no match\\&' error if I<either> of the two "
"expressions does not match; this is to be contrasted with B<*/(foo|bar)>, "
"which is treated as a single pattern but otherwise has similar effects\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1957
msgid ""
"To combine brace expansion with array expansion, see the B<${^>I<spec>B<}> "
"form described in the section Parameter Expansion above\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:1958
#, no-wrap
msgid "FILENAME EXPANSION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1965
msgid ""
"Each word is checked to see if it begins with an unquoted `B<~>\\&'\\&.  If "
"it does, then the word up to a `B</>\\&', or the end of the word if there is "
"no `B</>\\&', is checked to see if it can be substituted in one of the ways "
"described here\\&.  If so, then the `B<~>\\&' and the checked portion are "
"replaced with the appropriate substitute value\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1969
msgid ""
"A `B<~>\\&' by itself is replaced by the value of B<$HOME>\\&.  A `B<~>\\&' "
"followed by a `B<+>' or a `B<->' is replaced by current or previous working "
"directory, respectively\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1984
msgid ""
"A `B<~>\\&' followed by a number is replaced by the directory at that "
"position in the directory stack\\&.  `B<~0>\\&' is equivalent to `B<~+>', "
"and `B<~1>\\&' is the top of the stack\\&.  `B<~+>\\&' followed by a number "
"is replaced by the directory at that position in the directory stack\\&.  "
"`B<~+0>\\&' is equivalent to `B<~+>', and `B<~+1>\\&' is the top of the stack"
"\\&.  `B<~->\\&' followed by a number is replaced by the directory that many "
"positions from the bottom of the stack\\&.  `B<~-0>\\&' is the bottom of the "
"stack\\&.  The B<PUSHD_MINUS> option exchanges the effects of `B<~+>\\&' and "
"`B<~->' where they are followed by a number\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:1985
#, no-wrap
msgid "Dynamic named directories"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:1993
msgid ""
"If the function B<zsh_directory_name> exists, or the shell variable "
"B<zsh_directory_name_functions> exists and contains an array of function "
"names, then the functions are used to implement dynamic directory naming"
"\\&.  The functions are tried in order until one returns status zero, so it "
"is important that functions test whether they can handle the case in "
"question and return an appropriate status\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2005
msgid ""
"A `B<~>\\&' followed by a string I<namstr> in unquoted square brackets is "
"treated specially as a dynamic directory name\\&.  Note that the first "
"unquoted closing square bracket always terminates I<namstr>\\&.  The shell "
"function is passed two arguments: the string B<n> (for name) and I<namstr>"
"\\&.  It should either set the array B<reply> to a single element which is "
"the directory corresponding to the name and return status zero (executing an "
"assignment as the last statement is usually sufficient), or it should return "
"status non-zero\\&.  In the former case the element of reply is used as the "
"directory; in the latter case the substitution is deemed to have failed\\&.  "
"If all functions fail and the option B<NOMATCH> is set, an error results\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2018
msgid ""
"The functions defined as above are also used to see if a directory can be "
"turned into a name, for example when printing the directory stack or when "
"expanding B<%~> in prompts\\&.  In this case each function is passed two "
"arguments: the string B<d> (for directory) and the candidate for dynamic "
"naming\\&.  The function should either return non-zero status, if the "
"directory cannot be named by the function, or it should set the array reply "
"to consist of two elements: the first is the dynamic name for the directory "
"(as would appear within `B<~[>I<\\&.\\&.\\&.>B<]>\\&'), and the second is "
"the prefix length of the directory to be replaced\\&.  For example, if the "
"trial directory is B</home/myname/src/zsh> and the dynamic name for B</home/"
"myname/src> (which has 16 characters) is B<s>, then the function sets"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2022
#, no-wrap
msgid "B<reply=(s 16)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2029
msgid ""
"The directory name so returned is compared with possible static names for "
"parts of the directory path, as described below; it is used if the prefix "
"length matched (16 in the example) is longer than that matched by any static "
"name\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2035
msgid ""
"It is not a requirement that a function implements both B<n> and B<d> calls; "
"for example, it might be appropriate for certain dynamic forms of expansion "
"not to be contracted to names\\&.  In that case any call with the first "
"argument B<d> should cause a non-zero status to be returned\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2042
msgid ""
"The completion system calls `B<zsh_directory_name c>\\&' followed by "
"equivalent calls to elements of the array B<zsh_directory_name_functions>, "
"if it exists, in order to complete dynamic names for directories\\&.  The "
"code for this should be as for any other completion function as described in "
"I<zshcompsys>(1)\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2047
msgid ""
"As a working example, here is a function that expands any dynamic names "
"beginning with the string B<p:> to directories below B</home/pws/perforce>"
"\\&.  In this simple case a static name for the directory would be just as "
"effective\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2080
#, no-wrap
msgid ""
"B<zsh_directory_name() {\n"
"  emulate -L zsh\n"
"  setopt extendedglob\n"
"  local -a match mbegin mend\n"
"  if [[ $1 = d ]]; then\n"
"    # turn the directory into a name\n"
"    if [[ $2 = (#b)(/home/pws/perforce/)([^/]##)* ]]; then\n"
"      typeset -ga reply\n"
"      reply=(p:$match[2] $(( ${#match[1]} + ${#match[2]} )) )\n"
"    else\n"
"      return 1\n"
"    fi\n"
"  elif [[ $1 = n ]]; then\n"
"    # turn the name into a directory\n"
"    [[ $2 != (#b)p:(?*) ]] && return 1\n"
"    typeset -ga reply\n"
"    reply=(/home/pws/perforce/$match[1])\n"
"  elif [[ $1 = c ]]; then\n"
"    # complete names\n"
"    local expl\n"
"    local -a dirs\n"
"    dirs=(/home/pws/perforce/*(/:t))\n"
"    dirs=(p:${^dirs})\n"
"    _wanted dynamic-dirs expl \\&'dynamic directory' compadd -S\\e] -a dirs\n"
"    return\n"
"  else\n"
"    return 1\n"
"  fi\n"
"  return 0\n"
"}>\n"
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2083
#, no-wrap
msgid "Static named directories"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2093
msgid ""
"A `B<~>\\&' followed by anything not already covered consisting of any "
"number of alphanumeric characters or underscore (`B<_>\\&'), hyphen (`B<->"
"\\&'), or dot (`B<\\&.>') is looked up as a named directory, and replaced by "
"the value of that named directory if found\\&.  Named directories are "
"typically home directories for users on the system\\&.  They may also be "
"defined if the text after the `B<~>\\&' is the name of a string shell "
"parameter whose value begins with a `B</>\\&'\\&.  Note that trailing "
"slashes will be removed from the path to the directory (though the original "
"parameter is not modified)\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2096
msgid ""
"It is also possible to define directory names using the B<-d> option to the "
"B<hash> builtin\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2105
msgid ""
"When the shell prints a path (e\\&.g\\&. when expanding B<%~> in prompts or "
"when printing the directory stack), the path is checked to see if it has a "
"named directory as its prefix\\&.  If so, then the prefix portion is "
"replaced with a `B<~>\\&' followed by the name of the directory\\&.  The "
"shorter of the two ways of referring to the directory is used, i\\&.e\\&. "
"either the directory name or the full path; the name is used if they are the "
"same length\\&.  The parameters B<$PWD> and B<$OLDPWD> are never abbreviated "
"in this fashion\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2106
#, no-wrap
msgid "`=\\&' expansion"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2114
msgid ""
"If a word begins with an unquoted `B<=>\\&' and the B<EQUALS> option is set, "
"the remainder of the word is taken as the name of a command\\&.  If a "
"command exists by that name, the word is replaced by the full pathname of "
"the command\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2115
#, no-wrap
msgid "Notes"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2125
msgid ""
"Filename expansion is performed on the right hand side of a parameter "
"assignment, including those appearing after commands of the B<typeset> family"
"\\&.  In this case, the right hand side will be treated as a colon-separated "
"list in the manner of the B<PATH> parameter, so that a `B<~>\\&' or an "
"`B<=>' following a `B<:>' is eligible for expansion\\&.  All such behaviour "
"can be disabled by quoting the `B<~>\\&', the `B<=>', or the whole "
"expression (but not simply the colon); the B<EQUALS> option is also respected"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2130
msgid ""
"If the option B<MAGIC_EQUAL_SUBST> is set, any unquoted shell argument in "
"the form `I<identifier>B<=>I<expression>\\&' becomes eligible for file "
"expansion as described in the previous paragraph\\&.  Quoting the first `B<=>"
"\\&' also inhibits this\\&."
msgstr ""

#. type: SH
#: contracorriente/man1/zshexpn.1:2131
#, no-wrap
msgid "FILENAME GENERATION"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2138
msgid ""
"If a word contains an unquoted instance of one of the characters `B<*>\\&', "
"`B<(>', `B<|>', `B<E<lt>>', `B<[>', or `B<?>', it is regarded as a pattern "
"for filename generation, unless the B<GLOB> option is unset\\&.  If the "
"B<EXTENDED_GLOB> option is set, the `B<^>\\&' and `B<#>' characters also "
"denote a pattern; otherwise they are not treated specially by the shell\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2144
msgid ""
"The word is replaced with a list of sorted filenames that match the pattern"
"\\&.  If no matching pattern is found, the shell gives an error message, "
"unless the B<NULL_GLOB> option is set, in which case the word is deleted; or "
"unless the B<NOMATCH> option is unset, in which case the word is left "
"unchanged\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2153
msgid ""
"In filename generation, the character `B</>\\&' must be matched explicitly; "
"also, a `B<\\&.>\\&' must be matched explicitly at the beginning of a "
"pattern or after a `B</>\\&', unless the B<GLOB_DOTS> option is set\\&.  No "
"filename generation pattern matches the files `B<\\&.>\\&' or `B<\\&.\\&."
">'\\&.  In other instances of pattern matching, the `B</>\\&' and `B<\\&.>' "
"are not treated specially\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2153
#, no-wrap
msgid "Glob Operators"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2159
msgid "Matches any string, including the null string\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2162
msgid "Matches any character\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2162
#, no-wrap
msgid "B<[>\\&.\\&.\\&.B<]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2174
msgid ""
"Matches any of the enclosed characters\\&.  Ranges of characters can be "
"specified by separating two characters by a `B<->\\&'\\&.  A `B<->\\&' or "
"`B<]>' may be matched by including it as the first character in the list"
"\\&.  There are also several named classes of characters, in the form `B<[:"
">I<name>B<:]>\\&' with the following meanings\\&.  The first set use the "
"macros provided by the operating system to test for the given character "
"combinations, including any modifications due to local language settings, "
"see I<ctype>(3):"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2177
#, no-wrap
msgid "B<[:alnum:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2181
msgid "The character is alphanumeric"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2181
#, no-wrap
msgid "B<[:alpha:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2184
msgid "The character is alphabetic"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2184
#, no-wrap
msgid "B<[:ascii:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2188
msgid ""
"The character is 7-bit, i\\&.e\\&. is a single-byte character without the "
"top bit set\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2188
#, no-wrap
msgid "B<[:blank:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2191
msgid "The character is a blank character"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2191
#, no-wrap
msgid "B<[:cntrl:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2194
msgid "The character is a control character"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2194
#, no-wrap
msgid "B<[:digit:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2197
msgid "The character is a decimal digit"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2197
#, no-wrap
msgid "B<[:graph:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2200
msgid "The character is a printable character other than whitespace"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2200
#, no-wrap
msgid "B<[:lower:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2203
msgid "The character is a lowercase letter"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2203
#, no-wrap
msgid "B<[:print:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2206
msgid "The character is printable"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2206
#, no-wrap
msgid "B<[:punct:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2209
msgid "The character is printable but neither alphanumeric nor whitespace"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2209
#, no-wrap
msgid "B<[:space:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2212
msgid "The character is whitespace"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2212
#, no-wrap
msgid "B<[:upper:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2215
msgid "The character is an uppercase letter"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2215
#, no-wrap
msgid "B<[:xdigit:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2218
msgid "The character is a hexadecimal digit"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2221
msgid ""
"Another set of named classes is handled internally by the shell and is not "
"sensitive to the locale:"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2223
#, no-wrap
msgid "B<[:IDENT:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2228
msgid ""
"The character is allowed to form part of a shell identifier, such as a "
"parameter name"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2228
#, no-wrap
msgid "B<[:IFS:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2232
msgid ""
"The character is used as an input field separator, i\\&.e\\&. is contained "
"in the B<IFS> parameter"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2232
#, no-wrap
msgid "B<[:IFSSPACE:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2237
msgid ""
"The character is an IFS white space character; see the documentation for "
"B<IFS> in the I<zshparam>(1) manual page\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2237
#, no-wrap
msgid "B<[:INCOMPLETE:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2245
msgid ""
"Matches a byte that starts an incomplete multibyte character\\&.  Note that "
"there may be a sequence of more than one bytes that taken together form the "
"prefix of a multibyte character\\&.  To test for a potentially incomplete "
"byte sequence, use the pattern `B<[[:INCOMPLETE:]]*>\\&'\\&.  This will "
"never match a sequence starting with a valid multibyte character\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2245
#, no-wrap
msgid "B<[:INVALID:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2251
msgid ""
"Matches a byte that does not start a valid multibyte character\\&.  Note "
"this may be a continuation byte of an incomplete multibyte character as any "
"part of a multibyte string consisting of invalid and incomplete multibyte "
"characters is treated as single bytes\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2251
#, no-wrap
msgid "B<[:WORD:]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2255
msgid ""
"The character is treated as part of a word; this test is sensitive to the "
"value of the B<WORDCHARS> parameter"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2261
msgid ""
"Note that the square brackets are additional to those enclosing the whole "
"set of characters, so to test for a single alphanumeric character you need "
"`B<[[:alnum:]]>\\&'\\&.  Named character sets can be used alongside other "
"types, e\\&.g\\&. `B<[[:alpha:]0-9]>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2262
#, no-wrap
msgid "B<[^>\\&.\\&.\\&.B<]>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2265
#, no-wrap
msgid "B<[!>\\&.\\&.\\&.B<]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2270
msgid ""
"Like B<[>\\&.\\&.\\&.B<]>, except that it matches any character which is not "
"in the given set\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2270
#, no-wrap
msgid "B<E<lt>>[I<x>]B<->[I<y>]B<E<gt>>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2276
msgid ""
"Matches any number in the range I<x> to I<y>, inclusive\\&.  Either of the "
"numbers may be omitted to make the range open-ended; hence `B<E<lt>-E<gt>>"
"\\&' matches any number\\&.  To match individual digits, the B<[>\\&.\\&.\\&."
"B<]> form is more efficient\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2285
msgid ""
"Be careful when using other wildcards adjacent to patterns of this form; for "
"example, B<E<lt>0-9E<gt>*> will actually match any number whatsoever at the "
"start of the string, since the `B<E<lt>0-9E<gt>>\\&' will match the first "
"digit, and the `B<*>\\&' will match any others\\&.  This is a trap for the "
"unwary, but is in fact an inevitable consequence of the rule that the "
"longest possible match always succeeds\\&.  Expressions such as "
"`B<E<lt>0-9E<gt>[^[:digit:]]*>\\&' can be used instead\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2286
#, no-wrap
msgid "B<(>\\&.\\&.\\&.B<)>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2294
msgid ""
"Matches the enclosed pattern\\&.  This is used for grouping\\&.  If the "
"B<KSH_GLOB> option is set, then a `B<@>\\&', `B<*>', `B<+>', `B<?>' or `B<!"
">' immediately preceding the `B<(>\\&' is treated specially, as detailed "
"below\\&. The option B<SH_GLOB> prevents bare parentheses from being used in "
"this way, though the B<KSH_GLOB> option is still available\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2302
msgid ""
"Note that grouping cannot extend over multiple directories: it is an error "
"to have a `B</>\\&' within a group (this only applies for patterns used in "
"filename generation)\\&.  There is one exception: a group of the form "
"B<(>I<pat>B</)#> appearing as a complete path segment can match a sequence "
"of directories\\&.  For example, B<foo/(a*/)#bar> matches B<foo/bar>, B<foo/"
"any/bar>, B<foo/any/anyother/bar>, and so on\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2303
#, no-wrap
msgid "I<x>B<|>I<y>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2310
msgid ""
"Matches either I<x> or I<y>\\&.  This operator has lower precedence than any "
"other\\&.  The `B<|>\\&' character must be within parentheses, to avoid "
"interpretation as a pipeline\\&.  The alternatives are tried in order from "
"left to right\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2310
#, no-wrap
msgid "B<^>I<x>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2317
msgid ""
"(Requires B<EXTENDED_GLOB> to be set\\&.)  Matches anything except the "
"pattern I<x>\\&.  This has a higher precedence than `B</>\\&', so `B<^foo/"
"bar>' will search directories in `B<\\&.>\\&' except `B<\\&./foo>' for a "
"file named `B<bar>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2317
#, no-wrap
msgid "I<x>B<~>I<y>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2328
msgid ""
"(Requires B<EXTENDED_GLOB> to be set\\&.)  Match anything that matches the "
"pattern I<x> but does not match I<y>\\&.  This has lower precedence than any "
"operator except `B<|>\\&', so `B<*/*~foo/bar>\\&' will search for all files "
"in all directories in `B<\\&.>' and then exclude `B<foo/bar>\\&' if there "
"was such a match\\&.  Multiple patterns can be excluded by "
"`I<foo>B<~>I<bar>B<~>I<baz>\\&'\\&.  In the exclusion pattern (I<y>), `B</>"
"\\&' and `B<\\&.>' are not treated specially the way they usually are in "
"globbing\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2328
#, no-wrap
msgid "I<x>B<#>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2339
msgid ""
"(Requires B<EXTENDED_GLOB> to be set\\&.)  Matches zero or more occurrences "
"of the pattern I<x>\\&.  This operator has high precedence; `B<12#>\\&' is "
"equivalent to `B<1(2#)>', rather than `B<(12)#>\\&'\\&.  It is an error for "
"an unquoted `B<#>' to follow something which cannot be repeated; this "
"includes an empty string, a pattern already followed by `B<##>\\&', or "
"parentheses when part of a B<KSH_GLOB> pattern (for example, `B<!"
"(>I<foo>B<)#>\\&' is invalid and must be replaced by `B<*(!(>I<foo>B<))>"
"\\&')\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2339
#, no-wrap
msgid "I<x>B<##>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2347
msgid ""
"(Requires B<EXTENDED_GLOB> to be set\\&.)  Matches one or more occurrences "
"of the pattern I<x>\\&.  This operator has high precedence; `B<12##>\\&' is "
"equivalent to `B<1(2##)>', rather than `B<(12)##>\\&'\\&.  No more than two "
"active `B<#>' characters may appear together\\&.  (Note the potential clash "
"with glob qualifiers in the form `B<1(2##)>\\&' which should therefore be "
"avoided\\&.)"
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2347
#, no-wrap
msgid "ksh-like Glob Operators"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2352
msgid ""
"If the B<KSH_GLOB> option is set, the effects of parentheses can be modified "
"by a preceding `B<@>\\&', `B<*>', `B<+>', `B<?>' or `B<!>'\\&.  This "
"character need not be unquoted to have special effects, but the `B<(>\\&' "
"must be\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2354
#, no-wrap
msgid "B<@(>\\&.\\&.\\&.B<)>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2358
msgid ""
"Match the pattern in the parentheses\\&.  (Like `B<(>\\&.\\&.\\&.B<)>"
"\\&'\\&.)"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2358
#, no-wrap
msgid "B<*(>\\&.\\&.\\&.B<)>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2362
msgid ""
"Match any number of occurrences\\&.  (Like `B<(>\\&.\\&.\\&.B<)#>\\&', "
"except that recursive directory searching is not supported\\&.)"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2362
#, no-wrap
msgid "B<+(>\\&.\\&.\\&.B<)>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2366
msgid ""
"Match at least one occurrence\\&.  (Like `B<(>\\&.\\&.\\&.B<)##>\\&', except "
"that recursive directory searching is not supported\\&.)"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2366
#, no-wrap
msgid "B<?(>\\&.\\&.\\&.B<)>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2369
msgid "Match zero or one occurrence\\&.  (Like `B<(|>\\&.\\&.\\&.B<)>\\&'\\&.)"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2369
#, no-wrap
msgid "B<!(>\\&.\\&.\\&.B<)>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2373
msgid ""
"Match anything but the expression in parentheses\\&.  (Like `B<(^(>\\&.\\&."
"\\&.B<))>\\&'\\&.)"
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2373
#, no-wrap
msgid "Precedence"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2386
msgid ""
"The precedence of the operators given above is (highest) `B<^>\\&', `B</>', "
"`B<~>\\&', `B<|>' (lowest); the remaining operators are simply treated from "
"left to right as part of a string, with `B<#>\\&' and `B<##>' applying to "
"the shortest possible preceding unit (i\\&.e\\&. a character, `B<?>\\&', "
"`B<[>\\&.\\&.\\&.B<]>', `B<E<lt>>\\&.\\&.\\&.B<E<gt>>\\&', or a "
"parenthesised expression)\\&.  As mentioned above, a `B</>\\&' used as a "
"directory separator may not appear inside parentheses, while a `B<|>\\&' "
"must do so; in patterns used in other contexts than filename generation (for "
"example, in B<case> statements and tests within `B<[[>\\&.\\&.\\&.B<]]>"
"\\&'), a `B</>' is not special; and `B</>' is also not special after a `B<~>"
"\\&' appearing outside parentheses in a filename pattern\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2386
#, no-wrap
msgid "Globbing Flags"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2392
msgid ""
"There are various flags which affect any text to their right up to the end "
"of the enclosing group or to the end of the pattern; they require the "
"B<EXTENDED_GLOB> option\\&. All take the form B<(#>I<X>B<)> where I<X> may "
"have one of the following forms:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2399
msgid ""
"Case insensitive: upper or lower case characters in the pattern match upper "
"or lower case characters\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2404
msgid ""
"Lower case characters in the pattern match upper or lower case characters; "
"upper case characters in the pattern still only match upper case characters"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2404 contracorriente/man1/zshexpn.1:2787
#: contracorriente/man1/zshmodules.1:2913 contracorriente/man1/zshparam.1:462
#, no-wrap
msgid "B<I>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2408
msgid ""
"Case sensitive: locally negates the effect of B<i> or B<l> from that point on"
"\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2422
msgid ""
"Activate backreferences for parenthesised groups in the pattern; this does "
"not work in filename generation\\&.  When a pattern with a set of active "
"parentheses is matched, the strings matched by the groups are stored in the "
"array B<$match>, the indices of the beginning of the matched parentheses in "
"the array B<$mbegin>, and the indices of the end in the array B<$mend>, with "
"the first element of each array corresponding to the first parenthesised "
"group, and so on\\&.  These arrays are not otherwise special to the shell"
"\\&.  The indices use the same convention as does parameter substitution, so "
"that elements of B<$mend> and B<$mbegin> may be used in subscripts; the "
"B<KSH_ARRAYS> option is respected\\&.  Sets of globbing flags are not "
"considered parenthesised groups; only the first nine active parentheses can "
"be referenced\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2432
#, no-wrap
msgid ""
"B<foo=\"a_string_with_a_message\"\n"
"if [[ $foo = (a|an)_(#b)(*) ]]; then\n"
"  print ${foo[$mbegin[1],$mend[1]]}\n"
"fi>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2438
msgid ""
"prints `B<string_with_a_message>\\&'\\&.  Note that the first set of "
"parentheses is before the B<(#b)> and does not create a backreference\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2445
msgid ""
"Backreferences work with all forms of pattern matching other than filename "
"generation, but note that when performing matches on an entire array, such "
"as B<${>I<array>B<#>I<pattern>B<}>, or a global substitution, such as B<"
"${>I<param>B<//>I<pat>B</>I<repl>B<}>, only the data for the last match "
"remains available\\&.  In the case of global replacements this may still be "
"useful\\&.  See the example for the B<m> flag below\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2456
msgid ""
"The numbering of backreferences strictly follows the order of the opening "
"parentheses from left to right in the pattern string, although sets of "
"parentheses may be nested\\&.  There are special rules for parentheses "
"followed by `B<#>\\&' or `B<##>'\\&.  Only the last match of the parenthesis "
"is remembered: for example, in `B<[[ abab = (#b)([ab])# ]]>\\&', only the "
"final `B<b>\\&' is stored in B<match[1]>\\&.  Thus extra parentheses may be "
"necessary to match the complete segment: for example, use `B<X((ab|cd)#)Y>"
"\\&' to match a whole string of either `B<ab>\\&' or `B<cd>' between `B<X>' "
"and `B<Y>', using the value of B<$match[1]> rather than B<$match[2]>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2463
msgid ""
"If the match fails none of the parameters is altered, so in some cases it "
"may be necessary to initialise them beforehand\\&.  If some of the "
"backreferences fail to match -- which happens if they are in an alternate "
"branch which fails to match, or if they are followed by B<#> and matched "
"zero times -- then the matched string is set to the empty string, and the "
"start and end indices are set to -1\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2465
msgid ""
"Pattern matching with backreferences is slightly slower than without\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2470
msgid ""
"Deactivate backreferences, negating the effect of the B<b> flag from that "
"point on\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2470
#, no-wrap
msgid "B<c>I<N>B<,>I<M>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2483
msgid ""
"The flag B<(#c>I<N>B<,>I<M>B<)> can be used anywhere that the B<#> or B<##> "
"operators can be used except in the expressions `B<(*/)#>\\&' and "
"`B<(*/)##>' in filename generation, where `B</>' has special meaning; it "
"cannot be combined with other globbing flags and a bad pattern error occurs "
"if it is misplaced\\&.  It is equivalent to the form B<{>I<N>B<,>I<M>B<}> in "
"regular expressions\\&.  The previous character or group is required to "
"match between I<N> and I<M> times, inclusive\\&.  The form B<(#c>I<N>B<)> "
"requires exactly B<N> matches; B<(#c,>I<M>B<)> is equivalent to specifying "
"I<N> as 0; B<(#c>I<N>B<,)> specifies that there is no maximum limit on the "
"number of matches\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2492
msgid ""
"Set references to the match data for the entire string matched; this is "
"similar to backreferencing and does not work in filename generation\\&.  The "
"flag must be in effect at the end of the pattern, i\\&.e\\&. not local to a "
"group\\&. The parameters B<$MATCH>, B<$MBEGIN> and B<$MEND> will be set to "
"the string matched and to the indices of the beginning and end of the "
"string, respectively\\&.  This is most useful in parameter substitutions, as "
"otherwise the string matched is obvious\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2500
#, no-wrap
msgid ""
"B<arr=(veldt jynx grimps waqf zho buck)\n"
"print ${arr//(#m)[aeiou]/${(U)MATCH}}>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2505
msgid ""
"forces all the matches (i\\&.e\\&. all vowels) into uppercase, printing "
"`B<vEldt jynx grImps wAqf zhO bUck>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2509
msgid ""
"Unlike backreferences, there is no speed penalty for using match references, "
"other than the extra substitutions required for the replacement strings in "
"cases such as the example shown\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2514
msgid ""
"Deactivate the B<m> flag, hence no references to match data will be created"
"\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2514
#, no-wrap
msgid "B<a>I<num>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2518
msgid ""
"Approximate matching: I<num> errors are allowed in the string matched by the "
"pattern\\&.  The rules for this are described in the next subsection\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2518
#, no-wrap
msgid "B<s>, B<e>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2530
msgid ""
"Unlike the other flags, these have only a local effect, and each must appear "
"on its own: `B<(#s)>\\&' and `B<(#e)>' are the only valid forms\\&.  The "
"`B<(#s)>\\&' flag succeeds only at the start of the test string, and the "
"`B<(#e)>\\&' flag succeeds only at the end of the test string; they "
"correspond to `B<^>\\&' and `B<$>' in standard regular expressions\\&.  They "
"are useful for matching path segments in patterns other than those in "
"filename generation (where path segments are in any case treated "
"separately)\\&.  For example, `B<*((#s)|/)test((#e)|/)*>\\&' matches a path "
"segment `B<test>\\&' in any of the following strings: B<test>, B<test/at/"
"start>, B<at/end/test>, B<in/test/middle>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2539
msgid ""
"Another use is in parameter substitution; for example `B<${array/(#s)A*Z(#e)}"
">\\&' will remove only elements of an array which match the complete pattern "
"`B<A*Z>\\&'\\&.  There are other ways of performing many operations of this "
"type, however the combination of the substitution operations `B</>\\&' and "
"`B<//>' with the `B<(#s)>' and `B<(#e)>' flags provides a single simple and "
"memorable method\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2545
msgid ""
"Note that assertions of the form `B<(^(#s))>\\&' also work, i\\&.e\\&. match "
"anywhere except at the start of the string, although this actually means "
"`anything except a zero-length portion at the start of the string\\&'; you "
"need to use `B<(\"\"~(#s))>\\&' to match a zero-length portion of the string "
"not at the start\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2558
msgid ""
"A `B<q>\\&' and everything up to the closing parenthesis of the globbing "
"flags are ignored by the pattern matching code\\&.  This is intended to "
"support the use of glob qualifiers, see below\\&.  The result is that the "
"pattern `B<(#b)(*)\\&.c(#q\\&.)>\\&' can be used both for globbing and for "
"matching against a string\\&.  In the former case, the `B<(#q\\&.)>\\&' will "
"be treated as a glob qualifier and the `B<(#b)>\\&' will not be useful, "
"while in the latter case the `B<(#b)>\\&' is useful for backreferences and "
"the `B<(#q\\&.)>\\&' will be ignored\\&.  Note that colon modifiers in the "
"glob qualifiers are also not applied in ordinary pattern matching\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2567
msgid ""
"Respect the current locale in determining the presence of multibyte "
"characters in a pattern, provided the shell was compiled with "
"B<MULTIBYTE_SUPPORT>\\&.  This overrides the B<MULTIBYTE> option; the "
"default behaviour is taken from the option\\&.  Compare B<U>\\&.  (Mnemonic: "
"typically multibyte characters are from Unicode in the UTF-8 encoding, "
"although any extension of ASCII supported by the system library may be used"
"\\&.)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2571
msgid ""
"All characters are considered to be a single byte long\\&.  The opposite of "
"B<u>\\&.  This overrides the B<MULTIBYTE> option\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2578
msgid ""
"For example, the test string B<fooxx> can be matched by the pattern "
"B<(#i>B<)FOOXX>, but not by B<(#l>B<)FOOXX>, B<(#i>B<)FOO>B<(#I>B<)XX> or "
"B<((#i>B<)FOOX>B<)X>\\&.  The string B<(#ia2>B<)readme> specifies case-"
"insensitive matching of B<readme> with up to two errors\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2587
msgid ""
"When using the ksh syntax for grouping both B<KSH_GLOB> and B<EXTENDED_GLOB> "
"must be set and the left parenthesis should be preceded by B<@>\\&.  Note "
"also that the flags do not affect letters inside B<[>\\&.\\&.\\&.B<]> "
"groups, in other words B<(#i>B<)[a-z]> still matches only lowercase letters"
"\\&.  Finally, note that when examining whole paths case-insensitively every "
"directory must be searched for all files which match, so that a pattern of "
"the form B<(#i>B<)/foo/bar/\\&.\\&.\\&.> is potentially slow\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2588
#, no-wrap
msgid "Approximate Matching"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2592
msgid ""
"When matching approximately, the shell keeps a count of the errors found, "
"which cannot exceed the number specified in the B<(#a>I<num>B<)> flags\\&.  "
"Four types of error are recognised:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2598
msgid "Different characters, as in B<fooxbar> and B<fooybar>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2601
msgid "Transposition of characters, as in B<banana> and B<abnana>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2605
msgid ""
"A character missing in the target string, as with the pattern B<road> and "
"target string B<rod>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2609
msgid ""
"An extra character appearing in the target string, as with B<stove> and "
"B<strove>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2613
msgid ""
"Thus, the pattern B<(#a3>B<)abcd> matches B<dcba>, with the errors occurring "
"by using the first rule twice and the second once, grouping the string as "
"B<[d][cb][a]> and B<[a][bc][d]>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2624
msgid ""
"Non-literal parts of the pattern must match exactly, including characters in "
"character ranges: hence B<(#a1>B<)???> matches strings of length four, by "
"applying rule 4 to an empty part of the pattern, but not strings of length "
"two, since all the B<?> must match\\&.  Other characters which must match "
"exactly are initial dots in filenames (unless the B<GLOB_DOTS> option is "
"set), and all slashes in filenames, so that B<a/bc> is two errors from B<ab/"
"c> (the slash cannot be transposed with another character)\\&.  Similarly, "
"errors are counted separately for non-contiguous strings in the pattern, so "
"that B<(ab|cd>B<)ef> is two errors from B<aebf>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2633
msgid ""
"When using exclusion via the B<~> operator, approximate matching is treated "
"entirely separately for the excluded part and must be activated separately"
"\\&.  Thus, B<(#a1>B<)README~READ_ME> matches B<READ\\&.ME> but not "
"B<READ_ME>, as the trailing B<READ_ME> is matched without approximation\\&.  "
"However, B<(#a1>B<)README~(#a1>B<)READ_ME> does not match any pattern of the "
"form B<READ>I<?>B<ME> as all such forms are now excluded\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2645
msgid ""
"Apart from exclusions, there is only one overall error count; however, the "
"maximum errors allowed may be altered locally, and this can be delimited by "
"grouping\\&.  For example, B<(#a1>B<)cat>B<((#a0>B<)dog>B<)fox> allows one "
"error in total, which may not occur in the B<dog> section, and the pattern "
"B<(#a1>B<)cat>B<(#a0>B<)dog>B<(#a1>B<)fox> is equivalent\\&.  Note that the "
"point at which an error is first found is the crucial one for establishing "
"whether to use approximation; for example, B<(#a1)abc(#a0)xyz> will not "
"match B<abcdxyz>, because the error occurs at the `B<x>\\&', where "
"approximation is turned off\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2652
msgid ""
"Entire path segments may be matched approximately, so that `B<(#a1)/foo/d/is/"
"available/at/the/bar>\\&' allows one error in any path segment\\&.  This is "
"much less efficient than without the B<(#a1)>, however, since every "
"directory in the path must be scanned for a possible approximate match\\&.  "
"It is best to place the B<(#a1)> after any path segments which are known to "
"be correct\\&."
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2653
#, no-wrap
msgid "Recursive Globbing"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2657
msgid ""
"A pathname component of the form `B<(>I<foo>B</)#>\\&' matches a path "
"consisting of zero or more directories matching the pattern I<foo>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2662
msgid ""
"As a shorthand, `B<**/>\\&' is equivalent to `B<(*/)#>'; note that this "
"therefore matches files in the current directory as well as subdirectories"
"\\&.  Thus:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2666
#, no-wrap
msgid "B<ls -ld -- (*/)#bar>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2670
msgid "or"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2674
#, no-wrap
msgid "B<ls -ld -- **/bar>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2683
msgid ""
"does a recursive directory search for files named `B<bar>\\&' (potentially "
"including the file `B<bar>\\&' in the current directory)\\&.  This form does "
"not follow symbolic links; the alternative form `B<***/>\\&' does, but is "
"otherwise identical\\&.  Neither of these can be combined with other forms "
"of globbing within the same path segment; in that case, the `B<*>\\&' "
"operators revert to their usual effect\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2688
msgid ""
"Even shorter forms are available when the option B<GLOB_STAR_SHORT> is set"
"\\&.  In that case if no B</> immediately follows a B<**> or B<***> they are "
"treated as if both a B</> plus a further B<*> are present\\&.  Hence:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2693
#, no-wrap
msgid ""
"B<setopt GLOBSTARSHORT\n"
"ls -ld -- **\\&.c>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2697 contracorriente/man1/zshmisc.1:1777
msgid "is equivalent to"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2701
#, no-wrap
msgid "B<ls -ld -- **/*\\&.c>\n"
msgstr ""

#. type: SS
#: contracorriente/man1/zshexpn.1:2703
#, no-wrap
msgid "Glob Qualifiers"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2708
msgid ""
"Patterns used for filename generation may end in a list of qualifiers "
"enclosed in parentheses\\&.  The qualifiers specify which filenames that "
"otherwise match the given pattern will be inserted in the argument list\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2716
msgid ""
"If the option B<BARE_GLOB_QUAL> is set, then a trailing set of parentheses "
"containing no `B<|>\\&' or `B<(>' characters (or `B<~>' if it is special)  "
"is taken as a set of glob qualifiers\\&.  A glob subexpression that would "
"normally be taken as glob qualifiers, for example `B<(^x)>\\&', can be "
"forced to be treated as part of the glob pattern by doubling the "
"parentheses, in this case producing `B<((^x))>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2737
msgid ""
"If the option B<EXTENDED_GLOB> is set, a different syntax for glob "
"qualifiers is available, namely `B<(#q>I<x>B<)>\\&' where I<x> is any of the "
"same glob qualifiers used in the other format\\&.  The qualifiers must still "
"appear at the end of the pattern\\&.  However, with this syntax multiple "
"glob qualifiers may be chained together\\&.  They are treated as a logical "
"AND of the individual sets of flags\\&.  Also, as the syntax is unambiguous, "
"the expression will be treated as glob qualifiers just as long any "
"parentheses contained within it are balanced; appearance of `B<|>\\&', "
"`B<(>' or `B<~>\\&' does not negate the effect\\&.  Note that qualifiers "
"will be recognised in this form even if a bare glob qualifier exists at the "
"end of the pattern, for example `B<*(#q*)(\\&.)>\\&' will recognise "
"executable regular files if both options are set; however, mixed syntax "
"should probably be avoided for the sake of clarity\\&.  Note that within "
"conditions using the `B<[[>\\&' form the presence of a parenthesised "
"expression B<(#q>I<\\&.\\&.\\&.>B<)> at the end of a string indicates that "
"globbing should be performed; the expression may include glob qualifiers, "
"but it is also valid if it is simply B<(#q)>\\&.  This does not apply to the "
"right hand side of pattern match operators as the syntax already has special "
"significance\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2739
msgid "A qualifier may be any one of the following:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2745
msgid "directories"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2751
msgid ""
"`full\\&' (i\\&.e\\&. non-empty) directories\\&.  Note that the opposite "
"sense B<(^F>B<)> expands to empty directories and all non-directories\\&.  "
"Use B<(/^F>B<)> for empty directories\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2754
msgid "plain files"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2757
msgid "symbolic links"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2757
#, no-wrap
msgid "B<=>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2760
msgid "sockets"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2763
msgid "named pipes (FIFOs)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2766
msgid "executable plain files (0100 or 0010 or 0001)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2769
msgid "device files (character or block special)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2772
msgid "block special files"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2775
msgid "character special files"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2778
msgid "owner-readable files (0400)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2781
msgid "owner-writable files (0200)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2784
msgid "owner-executable files (0100)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2787
msgid "group-readable files (0040)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2790
msgid "group-writable files (0020)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2793
msgid "group-executable files (0010)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2796
msgid "world-readable files (0004)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2799
msgid "world-writable files (0002)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2802
msgid "world-executable files (0001)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2805
msgid "setuid files (04000)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2808
msgid "setgid files (02000)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2811
msgid "files with the sticky bit (01000)"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2811
#, no-wrap
msgid "B<f>I<spec>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2824
msgid ""
"files with access rights matching I<spec>\\&. This I<spec> may be a octal "
"number optionally preceded by a `B<=>\\&', a `B<+>', or a `B<->\\&'\\&. If "
"none of these characters is given, the behavior is the same as for `B<=>"
"\\&'\\&. The octal number describes the mode bits to be expected, if "
"combined with a `B<=>\\&', the value given must match the file-modes "
"exactly, with a `B<+>\\&', at least the bits in the given number must be set "
"in the file-modes, and with a `B<->\\&', the bits in the number must not be "
"set\\&. Giving a `B<?>\\&' instead of a octal digit anywhere in the number "
"ensures that the corresponding bits in the file-modes are not checked, this "
"is only useful in combination with `B<=>\\&'\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2846
msgid ""
"If the qualifier `B<f>\\&' is followed by any other character anything up to "
"the next matching character (`B<[>\\&', `B<{>', and `B<E<lt>>' match `B<]>"
"\\&', `B<}>', and `B<E<gt>>' respectively, any other character matches "
"itself) is taken as a list of comma-separated I<sub-spec>s\\&. Each I<sub-"
"spec> may be either an octal number as described above or a list of any of "
"the characters `B<u>\\&', `B<g>', `B<o>\\&', and `B<a>', followed by a "
"`B<=>', a `B<+>', or a `B<->\\&', followed by a list of any of the "
"characters `B<r>', `B<w>', `B<x>\\&', `B<s>', and `B<t>', or an octal digit"
"\\&. The first list of characters specify which access rights are to be "
"checked\\&. If a `B<u>\\&' is given, those for the owner of the file are "
"used, if a `B<g>\\&' is given, those of the group are checked, a `B<o>\\&' "
"means to test those of other users, and the `B<a>\\&' says to test all three "
"groups\\&. The `B<=>\\&', `B<+>', and `B<->' again says how the modes are to "
"be checked and have the same meaning as described for the first form above"
"\\&. The second list of characters finally says which access rights are to "
"be expected: `B<r>\\&' for read access, `B<w>' for write access, `B<x>\\&' "
"for the right to execute the file (or to search a directory), `B<s>\\&' for "
"the setuid and setgid bits, and `B<t>' for the sticky bit\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2855
msgid ""
"Thus, `B<*(f70?)>\\&' gives the files for which the owner has read, write, "
"and execute permission, and for which other group members have no rights, "
"independent of the permissions for other users\\&. The pattern `B<*(f-100)>"
"\\&' gives all files for which the owner does not have execute permission, "
"and `B<*(f:gu+w,o-rx:)>\\&' gives the files for which the owner and the "
"other members of the group have at least write permission, and for which "
"other users don\\&'t have read or execute permission\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2856
#, no-wrap
msgid "B<e>I<string>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2859
#, no-wrap
msgid "B<+>I<cmd>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2865
msgid ""
"The I<string> will be executed as shell code\\&.  The filename will be "
"included in the list if and only if the code returns a zero status (usually "
"the status of the last command)\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2876
msgid ""
"In the first form, the first character after the `B<e>\\&' will be used as a "
"separator and anything up to the next matching separator will be taken as "
"the I<string>; `B<[>\\&', `B<{>', and `B<E<lt>>' match `B<]>\\&', `B<}>', "
"and `B<E<gt>>', respectively, while any other character matches itself\\&. "
"Note that expansions must be quoted in the I<string> to prevent them from "
"being expanded before globbing is done\\&.  I<string> is then executed as "
"shell code\\&.  The string B<globqual> is appended to the array "
"B<zsh_eval_context> the duration of execution\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2883
msgid ""
"During the execution of I<string> the filename currently being tested is "
"available in the parameter B<REPLY>; the parameter may be altered to a "
"string to be inserted into the list instead of the original filename\\&.  In "
"addition, the parameter B<reply> may be set to an array or a string, which "
"overrides the value of B<REPLY>\\&.  If set to an array, the latter is "
"inserted into the command line word by word\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2888
msgid ""
"For example, suppose a directory contains a single file `B<lonely>\\&'\\&.  "
"Then the expression `B<*(e:\\&'reply=(${REPLY}{1,2})':)>' will cause the "
"words `B<lonely1>\\&' and `B<lonely2>' to be inserted into the command line"
"\\&.  Note the quoting of I<string>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2894
msgid ""
"The form B<+>I<cmd> has the same effect, but no delimiters appear around "
"I<cmd>\\&.  Instead, I<cmd> is taken as the longest sequence of characters "
"following the B<+> that are alphanumeric or underscore\\&.  Typically I<cmd> "
"will be the name of a shell function that contains the appropriate test\\&.  "
"For example,"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2900
#, no-wrap
msgid ""
"B<nt() { [[ $REPLY -nt $NTREF ]] }\n"
"NTREF=reffile\n"
"ls -ld -- *(+nt)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2905
msgid ""
"lists all files in the directory that have been modified more recently than "
"B<reffile>\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2906
#, no-wrap
msgid "B<d>I<dev>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2909
msgid "files on the device I<dev>"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2909
#, no-wrap
msgid "B<l>[B<->|B<+>]I<ct>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2913
msgid ""
"files having a link count less than I<ct> (B<->), greater than I<ct> (B<+>), "
"or equal to I<ct>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2916
msgid "files owned by the effective user ID"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2916
#, no-wrap
msgid "B<G>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2919
msgid "files owned by the effective group ID"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2919
#, no-wrap
msgid "B<u>I<id>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2930
msgid ""
"files owned by user ID I<id> if that is a number\\&.  Otherwise, I<id> "
"specifies a user name: the character after the `B<u>\\&' will be taken as a "
"separator and the string between it and the next matching separator will be "
"taken as a user name\\&.  The starting separators `B<[>\\&', `B<{>', and "
"`B<E<lt>>' match the final separators `B<]>\\&', `B<}>', and `B<E<gt>>', "
"respectively; any other character matches itself\\&.  The selected files are "
"those owned by this user\\&.  For example, `B<u:foo:>\\&' or `B<u[foo]>' "
"selects files owned by user `B<foo>\\&'\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2930
#, no-wrap
msgid "B<g>I<id>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2933
msgid "like B<u>I<id> but with group IDs or names"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2933
#, no-wrap
msgid "B<a>[B<Mwhms>][B<->|B<+>]I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2943
msgid ""
"files accessed exactly I<n> days ago\\&.  Files accessed within the last "
"I<n> days are selected using a negative value for I<n> (B<->I<n>)\\&.  Files "
"accessed more than I<n> days ago are selected by a positive I<n> value (B<"
"+>I<n>)\\&.  Optional unit specifiers `B<M>\\&', `B<w>', `B<h>\\&', `B<m>' "
"or `B<s>' (e\\&.g\\&. `B<ah5>') cause the check to be performed with months "
"(of 30 days), weeks, hours, minutes or seconds instead of days, respectively"
"\\&.  An explicit `B<d>\\&' for days is also allowed\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2951
msgid ""
"Any fractional part of the difference between the access time and the "
"current part in the appropriate units is ignored in the comparison\\&.  For "
"instance, `B<echo *(ah-5)>\\&' would echo files accessed within the last "
"five hours, while `B<echo *(ah+5)>\\&' would echo files accessed at least "
"six hours ago, as times strictly between five and six hours are treated as "
"five hours\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2952
#, no-wrap
msgid "B<m>[B<Mwhms>][B<->|B<+>]I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2956
msgid ""
"like the file access qualifier, except that it uses the file modification "
"time\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2956
#, no-wrap
msgid "B<c>[B<Mwhms>][B<->|B<+>]I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2960
msgid ""
"like the file access qualifier, except that it uses the file inode change "
"time\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2960
#, no-wrap
msgid "B<L>[B<+>|B<->]I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2964
msgid ""
"files less than I<n> bytes (B<->), more than I<n> bytes (B<+>), or exactly "
"I<n> bytes in length\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2977
msgid ""
"If this flag is directly followed by a I<size specifier> `B<k>\\&' (`B<K>'), "
"`B<m>\\&' (`B<M>'), or `B<p>' (`B<P>') (e\\&.g\\&. `B<Lk-50>') the check is "
"performed with kilobytes, megabytes, or blocks (of 512 bytes) instead\\&.  "
"(On some systems additional specifiers are available for gigabytes, `B<g>"
"\\&' or `B<G>', and terabytes, `B<t>' or `B<T>'\\&.) If a size specifier is "
"used a file is regarded as \"exactly\" the size if the file size rounded up "
"to the next unit is equal to the test size\\&.  Hence `B<*(Lm1)>\\&' matches "
"files from 1 byte up to 1 Megabyte inclusive\\&.  Note also that the set of "
"files \"less than\" the test size only includes files that would not match "
"the equality test; hence `B<*(Lm-1)>\\&' only matches files of zero size\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2981
msgid "negates all qualifiers following it"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2985
msgid ""
"toggles between making the qualifiers work on symbolic links (the default) "
"and the files they point to"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2988
msgid "sets the B<MARK_DIRS> option for the current pattern"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:2988 contracorriente/man1/zshmisc.1:2717
#, no-wrap
msgid "B<T>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2992
msgid ""
"appends a trailing qualifier mark to the filenames, analogous to the "
"B<LIST_TYPES> option, for the current pattern (overrides B<M>)"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2995
msgid "sets the B<NULL_GLOB> option for the current pattern"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:2998
msgid "sets the B<GLOB_DOTS> option for the current pattern"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3001
msgid "sets the B<NUMERIC_GLOB_SORT> option for the current pattern"
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:3001
#, no-wrap
msgid "B<Y>I<n>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3006
msgid ""
"enables short-circuit mode: the pattern will expand to at most I<n> filenames"
"\\&.  If more than I<n> matches exist, only the first I<n> matches in "
"directory traversal order will be considered\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3009
msgid "Implies B<oN> when no B<o>I<c> qualifier is used\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:3010
#, no-wrap
msgid "B<o>I<c>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3027
msgid ""
"specifies how the names of the files should be sorted\\&. If I<c> is B<n> "
"they are sorted by name; if it is B<L> they are sorted depending on the size "
"(length) of the files; if B<l> they are sorted by the number of links; if "
"B<a>, B<m>, or B<c> they are sorted by the time of the last access, "
"modification, or inode change respectively; if B<d>, files in subdirectories "
"appear before those in the current directory at each level of the search -- "
"this is best combined with other criteria, for example `B<odon>\\&' to sort "
"on names for files within the same directory; if B<N>, no sorting is "
"performed\\&.  Note that B<a>, B<m>, and B<c> compare the age against the "
"current time, hence the first name in the list is the youngest file\\&. Also "
"note that the modifiers B<^> and B<-> are used, so `B<*(^-oL)>\\&' gives a "
"list of all files sorted by file size in descending order, following any "
"symbolic links\\&.  Unless B<oN> is used, multiple order specifiers may "
"occur to resolve ties\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3031
msgid ""
"The default sorting is B<n> (by name) unless the B<Y> glob qualifier is "
"used, in which case it is B<N> (unsorted)\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3042
msgid ""
"B<oe> and B<o+> are special cases; they are each followed by shell code, "
"delimited as for the B<e> glob qualifier and the B<+> glob qualifier "
"respectively (see above)\\&.  The code is executed for each matched file "
"with the parameter B<REPLY> set to the name of the file on entry and "
"B<globsort> appended to B<zsh_eval_context>\\&.  The code should modify the "
"parameter B<REPLY> in some fashion\\&.  On return, the value of the "
"parameter is used instead of the file name as the string on which to sort"
"\\&.  Unlike other sort operators, B<oe> and B<o+> may be repeated, but note "
"that the maximum number of sort operators of any kind that may appear in any "
"glob expression is 12\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:3043
#, no-wrap
msgid "B<O>I<c>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3049
msgid ""
"like `B<o>\\&', but sorts in descending order; i\\&.e\\&. `B<*(^oc)>' is the "
"same as `B<*(Oc)>\\&' and `B<*(^Oc)>' is the same as `B<*(oc)>'; `B<Od>' "
"puts files in the current directory before those in subdirectories at each "
"level of the search\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:3049
#, no-wrap
msgid "B<[>I<beg>[B<,>I<end>]B<]>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3057
msgid ""
"specifies which of the matched filenames should be included in the returned "
"list\\&. The syntax is the same as for array subscripts\\&. I<beg> and the "
"optional I<end> may be mathematical expressions\\&. As in parameter "
"subscripting they may be negative to make them count from the last match "
"backward\\&. E\\&.g\\&.: `B<*(-OL[1,3])>\\&' gives a list of the names of "
"the three largest files\\&."
msgstr ""

#. type: TP
#: contracorriente/man1/zshexpn.1:3057
#, no-wrap
msgid "B<P>I<string>"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3065
msgid ""
"The I<string> will be prepended to each glob match as a separate word\\&.  "
"I<string> is delimited in the same way as arguments to the B<e> glob "
"qualifier described above\\&.  The qualifier can be repeated; the words are "
"prepended separately so that the resulting command line contains the words "
"in the same order they were given in the list of glob qualifiers\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3070
msgid ""
"A typical use for this is to prepend an option before all occurrences of a "
"file name; for example, the pattern `B<*(P:-f:)>\\&' produces the command "
"line arguments `B<-f> I<file1> B<-f> I<file2> \\&.\\&.\\&.\\&'"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3076
msgid ""
"If the modifier B<^> is active, then I<string> will be appended instead of "
"prepended\\&.  Prepending and appending is done independently so both can be "
"used on the same glob expression; for example by writing `B<*(P:foo:^P:bar:"
"^P:baz:)>\\&' which produces the command line arguments `B<foo> B<baz> "
"I<file1> B<bar> \\&.\\&.\\&.\\&'"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3085
msgid ""
"More than one of these lists can be combined, separated by commas\\&. The "
"whole list matches if at least one of the sublists matches (they are `or"
"\\&'ed, the qualifiers in the sublists are `and'ed)\\&.  Some qualifiers, "
"however, affect all matches generated, independent of the sublist in which "
"they are given\\&.  These are the qualifiers `B<M>\\&', `B<T>', `B<N>\\&', "
"`B<D>', `B<n>', `B<o>', `B<O>' and the subscripts given in brackets (`B<[>I<"
"\\&.\\&.\\&.>B<]>\\&')\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3096
msgid ""
"If a `B<:>\\&' appears in a qualifier list, the remainder of the expression "
"in parenthesis is interpreted as a modifier (see the section `Modifiers\\&' "
"in the section `History Expansion\\&')\\&.  Each modifier must be introduced "
"by a separate `B<:>\\&'\\&.  Note also that the result after modification "
"does not have to be an existing file\\&.  The name of any existing file can "
"be followed by a modifier of the form `B<(:>I<\\&.\\&.\\&.>B<)>\\&' even if "
"no actual filename generation is performed, although note that the presence "
"of the parentheses causes the entire expression to be subjected to any "
"global pattern matching options such as B<NULL_GLOB>\\&. Thus:"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3100
#, no-wrap
msgid "B<ls -ld -- *(-/)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3105
msgid "lists all directories and symbolic links that point to directories, and"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3109
#, no-wrap
msgid "B<ls -ld -- *(-@)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3113
msgid "lists all broken symbolic links, and"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3117
#, no-wrap
msgid "B<ls -ld -- *(%W)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3121
msgid "lists all world-writable device files in the current directory, and"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3125
#, no-wrap
msgid "B<ls -ld -- *(W,X)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3130
msgid ""
"lists all files in the current directory that are world-writable or world-"
"executable, and"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3134
#, no-wrap
msgid "B<print -rC1 /tmp/foo*(u0^@:t)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3139
msgid ""
"outputs the basename of all root-owned files beginning with the string "
"`B<foo>\\&' in B</tmp>, ignoring symlinks, and"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3143
#, no-wrap
msgid "B<ls -ld -- *\\&.*~(lex|parse)\\&.[ch](^D^l1)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3149
msgid ""
"lists all files having a link count of one whose names contain a dot (but "
"not those starting with a dot, since B<GLOB_DOTS> is explicitly switched "
"off) except for B<lex\\&.c>, B<lex\\&.h>, B<parse\\&.c> and B<parse\\&.h>\\&."
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3153
#, no-wrap
msgid "B<print -rC1 b*\\&.pro(#q:s/pro/shmo/)(#q\\&.:s/builtin/shmiltin/)>\n"
msgstr ""

#. type: Plain text
#: contracorriente/man1/zshexpn.1:3160
msgid ""
"demonstrates how colon modifiers and other qualifiers may be chained together"
"\\&.  The ordinary qualifier `B<\\&.>\\&' is applied first, then the colon "
"modifiers in order from left to right\\&.  So if B<EXTENDED_GLOB> is set and "
"the base pattern matches the regular file B<builtin\\&.pro>, the shell will "
"print `B<shmiltin\\&.shmo>\\&'\\&."
msgstr ""
