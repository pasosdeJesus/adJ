$OpenBSD: patch-chrome_browser_enterprise_connectors_device_trust_device_trust_service_h,v 1.3 2021/09/01 16:54:38 robert Exp $

Index: chrome/browser/enterprise/connectors/device_trust/device_trust_service.h
--- chrome/browser/enterprise/connectors/device_trust/device_trust_service.h.orig
+++ chrome/browser/enterprise/connectors/device_trust/device_trust_service.h
@@ -11,7 +11,7 @@
 #include "components/prefs/pref_change_registrar.h"
 #include "components/prefs/pref_service.h"
 
-#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC) || defined(OS_BSD)
 #include "chrome/browser/enterprise/connectors/device_trust/attestation_service.h"
 #endif  // defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
 
@@ -45,7 +45,7 @@ class DeviceTrustService : public KeyedService {
   using SignalReportCallback = base::OnceCallback<void(bool)>;
   void SetSignalReportCallbackForTesting(SignalReportCallback cb);
 
-#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC) || defined(OS_BSD)
   std::string GetAttestationCredentialForTesting() const;
   // Starts flow that actually builds a response. This method is called
   // from a non_UI thread.
@@ -74,7 +74,7 @@ class DeviceTrustService : public KeyedService {
   std::unique_ptr<enterprise_connectors::DeviceTrustSignalReporter> reporter_;
   SignalReportCallback signal_report_callback_;
 
-#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC) || defined(OS_BSD)
   std::unique_ptr<AttestationService> attestation_service_;
 #endif  // defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
 
